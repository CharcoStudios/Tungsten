<?xml version="1.0" encoding="utf-8"?>
<topics>
  <topic id="N:W" type="API" />
  <topic id="T:W.ActionQueue`1" type="API" />
  <topic id="Methods.T:W.ActionQueue`1" type="API" />
  <topic id="Properties.T:W.ActionQueue`1" type="API" />
  <topic id="Overload:W.ActionQueue`1.#ctor" type="API" />
  <topic id="M:W.ActionQueue`1.#ctor(System.Action{`0},System.String)" type="API" />
  <topic id="M:W.ActionQueue`1.#ctor(System.Func{`0,System.Boolean},System.String)" type="API" />
  <topic id="M:W.ActionQueue`1.Cancel" type="API" />
  <topic id="P:W.ActionQueue`1.Count" type="API" />
  <topic id="M:W.ActionQueue`1.Enqueue(`0)" type="API" />
  <topic id="P:W.ActionQueue`1.Queue" type="API" />
  <topic id="T:W.CallResult" type="API" />
  <topic id="Methods.T:W.CallResult" type="API" />
  <topic id="Properties.T:W.CallResult" type="API" />
  <topic id="Overload:W.CallResult.#ctor" type="API" />
  <topic id="M:W.CallResult.#ctor" type="API" />
  <topic id="M:W.CallResult.#ctor(System.Boolean)" type="API" />
  <topic id="M:W.CallResult.#ctor(System.Boolean,System.Exception)" type="API" />
  <topic id="P:W.CallResult.Empty" type="API" />
  <topic id="P:W.CallResult.Exception" type="API" />
  <topic id="P:W.CallResult.Success" type="API" />
  <topic id="T:W.CallResult`1" type="API" />
  <topic id="Methods.T:W.CallResult`1" type="API" />
  <topic id="Properties.T:W.CallResult`1" type="API" />
  <topic id="Overload:W.CallResult`1.#ctor" type="API" />
  <topic id="M:W.CallResult`1.#ctor" type="API" />
  <topic id="M:W.CallResult`1.#ctor(System.Boolean)" type="API" />
  <topic id="M:W.CallResult`1.#ctor(System.Boolean,`0)" type="API" />
  <topic id="M:W.CallResult`1.#ctor(System.Boolean,`0,System.Exception)" type="API" />
  <topic id="P:W.CallResult`1.Empty" type="API" />
  <topic id="P:W.CallResult`1.Result" type="API" />
  <topic id="T:W.InvokeExtensions" type="API" />
  <topic id="Methods.T:W.InvokeExtensions" type="API" />
  <topic id="Overload:W.InvokeExtensions.InvokeEx" type="API" />
  <topic id="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" type="API" />
  <topic id="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" type="API" />
  <topic id="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" type="API" />
  <topic id="T:W.IOwnedProperty" type="API" />
  <topic id="Methods.T:W.IOwnedProperty" type="API" />
  <topic id="M:W.IOwnedProperty.SetOwner(System.Object)" type="API" />
  <topic id="T:W.IProperty" type="API" />
  <topic id="Properties.T:W.IProperty" type="API" />
  <topic id="P:W.IProperty.IsDirty" type="API" />
  <topic id="T:W.IProperty`1" type="API" />
  <topic id="Properties.T:W.IProperty`1" type="API" />
  <topic id="P:W.IProperty`1.Value" type="API" />
  <topic id="T:W.Lockable`1" type="API" />
  <topic id="Methods.T:W.Lockable`1" type="API" />
  <topic id="Properties.T:W.Lockable`1" type="API" />
  <topic id="Overload:W.Lockable`1.#ctor" type="API" />
  <topic id="M:W.Lockable`1.#ctor" type="API" />
  <topic id="M:W.Lockable`1.#ctor(`0)" type="API" />
  <topic id="P:W.Lockable`1.LockObject" type="API" />
  <topic id="P:W.Lockable`1.UnlockedValue" type="API" />
  <topic id="P:W.Lockable`1.Value" type="API" />
  <topic id="T:W.Property`1" type="API" />
  <topic id="Methods.T:W.Property`1" type="API" />
  <topic id="Overload:W.Property`1.#ctor" type="API" />
  <topic id="M:W.Property`1.#ctor" type="API" />
  <topic id="M:W.Property`1.#ctor(`0)" type="API" />
  <topic id="M:W.Property`1.#ctor(`0,W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`1.#ctor(W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" type="API" />
  <topic id="T:W.Property`2" type="API" />
  <topic id="Methods.T:W.Property`2" type="API" />
  <topic id="Overload:W.Property`2.#ctor" type="API" />
  <topic id="M:W.Property`2.#ctor" type="API" />
  <topic id="M:W.Property`2.#ctor(`0)" type="API" />
  <topic id="M:W.Property`2.#ctor(`0,`1)" type="API" />
  <topic id="M:W.Property`2.#ctor(`0,`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`2.#ctor(`0,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`2.#ctor(`1)" type="API" />
  <topic id="M:W.Property`2.#ctor(W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="T:W.PropertyBase`2" type="API" />
  <topic id="Methods.T:W.PropertyBase`2" type="API" />
  <topic id="Properties.T:W.PropertyBase`2" type="API" />
  <topic id="Events.T:W.PropertyBase`2" type="API" />
  <topic id="Fields.T:W.PropertyBase`2" type="API" />
  <topic id="M:W.PropertyBase`2.#ctor" type="API" />
  <topic id="P:W.PropertyBase`2.DefaultValue" type="API" />
  <topic id="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" type="API" />
  <topic id="M:W.PropertyBase`2.GetValue" type="API" />
  <topic id="P:W.PropertyBase`2.IsDirty" type="API" />
  <topic id="M:W.PropertyBase`2.LoadValue(`1)" type="API" />
  <topic id="M:W.PropertyBase`2.OnPropertyChanged(System.String)" type="API" />
  <topic id="F:W.PropertyBase`2.OnValueChanged" type="API" />
  <topic id="P:W.PropertyBase`2.Owner" type="API" />
  <topic id="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" type="API" />
  <topic id="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" type="API" />
  <topic id="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" type="API" />
  <topic id="M:W.PropertyBase`2.SetValue(System.Object,System.String)" type="API" />
  <topic id="P:W.PropertyBase`2.Value" type="API" />
  <topic id="E:W.PropertyBase`2.ValueChanged" type="API" />
  <topic id="E:W.PropertyBase`2.ValueChanging" type="API" />
  <topic id="M:W.PropertyBase`2.WaitForChanged(System.Int32)" type="API" />
  <topic id="T:W.PropertyBase`2.OnValueChangedDelegate" type="API" />
  <topic id="T:W.PropertyBase`2.PropertyValueChangedDelegate" type="API" />
  <topic id="T:W.PropertyBase`2.PropertyValueChangingDelegate" type="API" />
  <topic id="T:W.PropertyChangedNotifier" type="API" />
  <topic id="Methods.T:W.PropertyChangedNotifier" type="API" />
  <topic id="Events.T:W.PropertyChangedNotifier" type="API" />
  <topic id="M:W.PropertyChangedNotifier.#ctor" type="API" />
  <topic id="M:W.PropertyChangedNotifier.GetValue" type="API" />
  <topic id="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)" type="API" />
  <topic id="E:W.PropertyChangedNotifier.PropertyChanged" type="API" />
  <topic id="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" type="API" />
  <topic id="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)" type="API" />
  <topic id="T:W.PropertyHost" type="API" />
  <topic id="Methods.T:W.PropertyHost" type="API" />
  <topic id="Properties.T:W.PropertyHost" type="API" />
  <topic id="M:W.PropertyHost.#ctor" type="API" />
  <topic id="P:W.PropertyHost.IsDirty" type="API" />
  <topic id="M:W.PropertyHost.MarkAsClean" type="API" />
  <topic id="T:W.PropertyHostMethods" type="API" />
  <topic id="Methods.T:W.PropertyHostMethods" type="API" />
  <topic id="M:W.PropertyHostMethods.InitializeProperties(System.Object)" type="API" />
  <topic id="M:W.PropertyHostMethods.IsDirty(System.Object)" type="API" />
  <topic id="M:W.PropertyHostMethods.MarkAsClean(System.Object)" type="API" />
  <topic id="T:W.PropertyHostNotifier" type="API" />
  <topic id="Methods.T:W.PropertyHostNotifier" type="API" />
  <topic id="Properties.T:W.PropertyHostNotifier" type="API" />
  <topic id="M:W.PropertyHostNotifier.#ctor" type="API" />
  <topic id="P:W.PropertyHostNotifier.IsDirty" type="API" />
  <topic id="M:W.PropertyHostNotifier.MarkAsClean" type="API" />
  <topic id="N:W.Domains" type="API" />
  <topic id="T:W.Domains.DomainLoader" type="API" />
  <topic id="Methods.T:W.Domains.DomainLoader" type="API" />
  <topic id="Properties.T:W.Domains.DomainLoader" type="API" />
  <topic id="Overload:W.Domains.DomainLoader.#ctor" type="API" />
  <topic id="Overload:W.Domains.DomainLoader.Create" type="API" />
  <topic id="Overload:W.Domains.DomainLoader.Execute" type="API" />
  <topic id="Overload:W.Domains.DomainLoader.ExecuteStaticMethod" type="API" />
  <topic id="M:W.Domains.DomainLoader.#ctor(System.String,System.Boolean)" type="API" />
  <topic id="M:W.Domains.DomainLoader.#ctor(System.String,System.String,System.Boolean)" type="API" />
  <topic id="M:W.Domains.DomainLoader.Create``1(System.String)" type="API" />
  <topic id="M:W.Domains.DomainLoader.Create(System.String)" type="API" />
  <topic id="M:W.Domains.DomainLoader.Dispose" type="API" />
  <topic id="M:W.Domains.DomainLoader.DoCallback(System.Action)" type="API" />
  <topic id="P:W.Domains.DomainLoader.DomainName" type="API" />
  <topic id="M:W.Domains.DomainLoader.Execute``1(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.DomainLoader.Execute(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.DomainLoader.ExecuteStaticMethod``1(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.DomainLoader.ExecuteStaticMethod(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.DomainLoader.Finalize" type="API" />
  <topic id="M:W.Domains.DomainLoader.GetData``1(System.String)" type="API" />
  <topic id="M:W.Domains.DomainLoader.Load" type="API" />
  <topic id="M:W.Domains.DomainLoader.SetData(System.String,System.Object)" type="API" />
  <topic id="M:W.Domains.DomainLoader.Unload" type="API" />
  <topic id="T:W.Domains.IDomainLoader" type="API" />
  <topic id="Methods.T:W.Domains.IDomainLoader" type="API" />
  <topic id="Overload:W.Domains.IDomainLoader.Create" type="API" />
  <topic id="Overload:W.Domains.IDomainLoader.Execute" type="API" />
  <topic id="Overload:W.Domains.IDomainLoader.ExecuteStaticMethod" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Create(System.String)" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Create``1(System.String)" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Dispose" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Execute``1(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Execute(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.IDomainLoader.ExecuteStaticMethod``1(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.IDomainLoader.ExecuteStaticMethod(System.String,System.String,System.Object[])" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Load" type="API" />
  <topic id="M:W.Domains.IDomainLoader.Unload" type="API" />
  <topic id="N:W.LiteDb" type="API" />
  <topic id="T:W.LiteDb.ILiteDbItem" type="API" />
  <topic id="Properties.T:W.LiteDb.ILiteDbItem" type="API" />
  <topic id="P:W.LiteDb.ILiteDbItem._id" type="API" />
  <topic id="T:W.LiteDb.LiteDbItem" type="API" />
  <topic id="Methods.T:W.LiteDb.LiteDbItem" type="API" />
  <topic id="Properties.T:W.LiteDb.LiteDbItem" type="API" />
  <topic id="M:W.LiteDb.LiteDbItem.#ctor" type="API" />
  <topic id="P:W.LiteDb.LiteDbItem._id" type="API" />
  <topic id="T:W.LiteDb.LiteDbMethods" type="API" />
  <topic id="Methods.T:W.LiteDb.LiteDbMethods" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.Delete" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.EnsureIndex" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.Exists" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.Find" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.FindOne" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.LiteDbAction" type="API" />
  <topic id="Overload:W.LiteDb.LiteDbMethods.Save" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Delete``1(System.String,System.Func{``0,System.Boolean})" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Delete``1(System.String,System.Int32)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Delete``1(System.String,System.String,System.Object)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.DeleteBitmap(System.String,System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.DownloadAndSaveBitmap(System.String,System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Drop``1(System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.EnsureIndex``1(LiteDB.LiteCollection{``0},System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.EnsureIndex``1(LiteDB.LiteDatabase,System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.EnsureIndex``1(System.String,System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Exists``1(System.String,System.Func{``0,System.Boolean})" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Exists``1(System.String,System.String,System.Object)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.FileSize(System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Find``1(System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Find``1(System.String,System.Func{``0,System.Boolean})" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Find``1(System.String,System.String,System.Object)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.FindOne``1(System.String,System.Func{``0,System.Boolean})" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.FindOne``1(System.String,System.String,System.Object)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.LiteDbAction``2(System.String,System.Func{LiteDB.LiteDatabase,``1},System.String,System.String,System.Int32)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.LiteDbAction``2(System.String,System.Func{LiteDB.LiteDatabase,LiteDB.LiteCollection{``0},``1},System.String,System.String,System.Int32)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.LiteDbAction``2(System.String,System.Func{LiteDB.LiteDatabase,LiteDB.LiteTransaction,LiteDB.LiteCollection{``0},``1},System.String,System.String,System.Int32)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.LoadBitmap(System.String,System.String)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Save``1(System.String,System.Collections.Generic.List{``0})" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.Save``1(System.String,``0)" type="API" />
  <topic id="M:W.LiteDb.LiteDbMethods.SaveBitmap(System.String,System.String,System.Drawing.Bitmap)" type="API" />
  <topic id="N:W.Logging" type="API" />
  <topic id="T:W.Logging.Log" type="API" />
  <topic id="Methods.T:W.Logging.Log" type="API" />
  <topic id="Properties.T:W.Logging.Log" type="API" />
  <topic id="Overload:W.Logging.Log.e" type="API" />
  <topic id="M:W.Logging.Log.e(System.Exception)" type="API" />
  <topic id="M:W.Logging.Log.e(System.String,System.Object[])" type="API" />
  <topic id="M:W.Logging.Log.i(System.String,System.Object[])" type="API" />
  <topic id="P:W.Logging.Log.LogTheMessage" type="API" />
  <topic id="M:W.Logging.Log.v(System.String,System.Object[])" type="API" />
  <topic id="M:W.Logging.Log.w(System.String,System.Object[])" type="API" />
  <topic id="T:W.Logging.Log.LogMessageCategory" type="API" />
  <topic id="N:W.RPC" type="API" />
  <topic id="T:W.RPC.Client" type="API" />
  <topic id="Methods.T:W.RPC.Client" type="API" />
  <topic id="Properties.T:W.RPC.Client" type="API" />
  <topic id="Events.T:W.RPC.Client" type="API" />
  <topic id="Overload:W.RPC.Client.#ctor" type="API" />
  <topic id="Overload:W.RPC.Client.Connect" type="API" />
  <topic id="Overload:W.RPC.Client.ConnectAsync" type="API" />
  <topic id="Overload:W.RPC.Client.MakeRPCCall" type="API" />
  <topic id="M:W.RPC.Client.#ctor" type="API" />
  <topic id="M:W.RPC.Client.#ctor(System.Net.IPAddress,System.Int32,System.Int32)" type="API" />
  <topic id="M:W.RPC.Client.#ctor(System.String,System.Int32,System.Int32)" type="API" />
  <topic id="M:W.RPC.Client.Connect(System.Net.IPAddress,System.Int32,System.Int32,System.Action{W.RPC.ISocketClient,System.Net.IPAddress},System.Action{System.Exception})" type="API" />
  <topic id="M:W.RPC.Client.Connect(System.String,System.Int32,System.Int32,System.Action{W.RPC.ISocketClient,System.Net.IPAddress},System.Action{System.Exception})" type="API" />
  <topic id="M:W.RPC.Client.ConnectAsync(System.Net.IPAddress,System.Int32,System.Int32)" type="API" />
  <topic id="M:W.RPC.Client.ConnectAsync(System.String,System.Int32,System.Int32)" type="API" />
  <topic id="E:W.RPC.Client.Connected" type="API" />
  <topic id="M:W.RPC.Client.Disconnect" type="API" />
  <topic id="E:W.RPC.Client.Disconnected" type="API" />
  <topic id="M:W.RPC.Client.Dispose" type="API" />
  <topic id="M:W.RPC.Client.Finalize" type="API" />
  <topic id="P:W.RPC.Client.IsConnected" type="API" />
  <topic id="M:W.RPC.Client.MakeRPCCall(System.String,System.Action,System.Object[])" type="API" />
  <topic id="M:W.RPC.Client.MakeRPCCall``1(System.String,System.Action{``0})" type="API" />
  <topic id="M:W.RPC.Client.MakeRPCCall``1(System.String,System.Action{``0},System.Object[])" type="API" />
  <topic id="T:W.RPC.Constants" type="API" />
  <topic id="Methods.T:W.RPC.Constants" type="API" />
  <topic id="Fields.T:W.RPC.Constants" type="API" />
  <topic id="M:W.RPC.Constants.#ctor" type="API" />
  <topic id="F:W.RPC.Constants.DefaultConnectTimeout" type="API" />
  <topic id="F:W.RPC.Constants.DefaultMakeRPCCallTimeout" type="API" />
  <topic id="T:W.RPC.Delegates" type="API" />
  <topic id="Methods.T:W.RPC.Delegates" type="API" />
  <topic id="M:W.RPC.Delegates.#ctor" type="API" />
  <topic id="T:W.RPC.Delegates.ConnectedDelegate" type="API" />
  <topic id="T:W.RPC.Delegates.ConnectionTimeoutDelegate" type="API" />
  <topic id="T:W.RPC.Delegates.DisconnectedDelegate" type="API" />
  <topic id="T:W.RPC.IClient" type="API" />
  <topic id="Methods.T:W.RPC.IClient" type="API" />
  <topic id="Overload:W.RPC.IClient.MakeRPCCall" type="API" />
  <topic id="M:W.RPC.IClient.Dispose" type="API" />
  <topic id="M:W.RPC.IClient.MakeRPCCall(System.String,System.Action,System.Object[])" type="API" />
  <topic id="M:W.RPC.IClient.MakeRPCCall``1(System.String,System.Action{``0})" type="API" />
  <topic id="M:W.RPC.IClient.MakeRPCCall``1(System.String,System.Action{``0},System.Object[])" type="API" />
  <topic id="T:W.RPC.ISocketClient" type="API" />
  <topic id="Methods.T:W.RPC.ISocketClient" type="API" />
  <topic id="Properties.T:W.RPC.ISocketClient" type="API" />
  <topic id="Events.T:W.RPC.ISocketClient" type="API" />
  <topic id="Overload:W.RPC.ISocketClient.Connect" type="API" />
  <topic id="Overload:W.RPC.ISocketClient.ConnectAsync" type="API" />
  <topic id="M:W.RPC.ISocketClient.Connect(System.Net.IPAddress,System.Int32,System.Int32,System.Action{W.RPC.ISocketClient,System.Net.IPAddress},System.Action{System.Exception})" type="API" />
  <topic id="M:W.RPC.ISocketClient.Connect(System.String,System.Int32,System.Int32,System.Action{W.RPC.ISocketClient,System.Net.IPAddress},System.Action{System.Exception})" type="API" />
  <topic id="M:W.RPC.ISocketClient.ConnectAsync(System.Net.IPAddress,System.Int32,System.Int32)" type="API" />
  <topic id="M:W.RPC.ISocketClient.ConnectAsync(System.String,System.Int32,System.Int32)" type="API" />
  <topic id="E:W.RPC.ISocketClient.Connected" type="API" />
  <topic id="M:W.RPC.ISocketClient.Disconnect" type="API" />
  <topic id="E:W.RPC.ISocketClient.Disconnected" type="API" />
  <topic id="P:W.RPC.ISocketClient.IsConnected" type="API" />
  <topic id="T:W.RPC.RPCClassAttribute" type="API" />
  <topic id="Methods.T:W.RPC.RPCClassAttribute" type="API" />
  <topic id="M:W.RPC.RPCClassAttribute.#ctor" type="API" />
  <topic id="T:W.RPC.RPCMethodAttribute" type="API" />
  <topic id="Methods.T:W.RPC.RPCMethodAttribute" type="API" />
  <topic id="M:W.RPC.RPCMethodAttribute.#ctor" type="API" />
  <topic id="T:W.RPC.Server" type="API" />
  <topic id="Methods.T:W.RPC.Server" type="API" />
  <topic id="Overload:W.RPC.Server.#ctor" type="API" />
  <topic id="M:W.RPC.Server.#ctor" type="API" />
  <topic id="M:W.RPC.Server.#ctor(System.Net.IPAddress,System.Int32)" type="API" />
  <topic id="M:W.RPC.Server.Create(System.Net.IPAddress,System.Int32)" type="API" />
  <topic id="M:W.RPC.Server.Dispose" type="API" />
  <topic id="M:W.RPC.Server.Finalize" type="API" />
  <topic id="M:W.RPC.Server.Start(System.Net.IPAddress,System.Int32)" type="API" />
  <topic id="M:W.RPC.Server.Stop" type="API" />
  <topic id="N:W.RPC.Interfaces" type="API" />
  <topic id="T:W.RPC.Interfaces.IServer" type="API" />
  <topic id="Methods.T:W.RPC.Interfaces.IServer" type="API" />
  <topic id="M:W.RPC.Interfaces.IServer.Dispose" type="API" />
  <topic id="M:W.RPC.Interfaces.IServer.Start(System.Net.IPAddress,System.Int32)" type="API" />
  <topic id="M:W.RPC.Interfaces.IServer.Stop" type="API" />
  <topic id="N:W.Threading" type="API" />
  <topic id="T:W.Threading.Gate" type="API" />
  <topic id="Methods.T:W.Threading.Gate" type="API" />
  <topic id="M:W.Threading.Gate.#ctor(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="M:W.Threading.Gate.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.Gate.Run" type="API" />
  <topic id="T:W.Threading.Gate`1" type="API" />
  <topic id="Methods.T:W.Threading.Gate`1" type="API" />
  <topic id="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},`0)" type="API" />
  <topic id="M:W.Threading.Gate`1.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.Gate`1.Run" type="API" />
  <topic id="T:W.Threading.GateMethods" type="API" />
  <topic id="Methods.T:W.Threading.GateMethods" type="API" />
  <topic id="Overload:W.Threading.GateMethods.CreateGate" type="API" />
  <topic id="M:W.Threading.GateMethods.CreateGate(System.Action{System.Threading.CancellationTokenSource})" type="API" />
  <topic id="M:W.Threading.GateMethods.CreateGate``1(System.Action{``0,System.Threading.CancellationTokenSource})" type="API" />
  <topic id="T:W.Threading.Thread" type="API" />
  <topic id="Methods.T:W.Threading.Thread" type="API" />
  <topic id="Overload:W.Threading.Thread.Cancel" type="API" />
  <topic id="Overload:W.Threading.Thread.Join" type="API" />
  <topic id="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="M:W.Threading.Thread.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.Thread.Cancel" type="API" />
  <topic id="M:W.Threading.Thread.Cancel(System.Int32)" type="API" />
  <topic id="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="M:W.Threading.Thread.Dispose" type="API" />
  <topic id="M:W.Threading.Thread.Join" type="API" />
  <topic id="M:W.Threading.Thread.Join(System.Int32)" type="API" />
  <topic id="T:W.Threading.Thread`1" type="API" />
  <topic id="Methods.T:W.Threading.Thread`1" type="API" />
  <topic id="Properties.T:W.Threading.Thread`1" type="API" />
  <topic id="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},`0)" type="API" />
  <topic id="P:W.Threading.Thread`1.Action" type="API" />
  <topic id="M:W.Threading.Thread`1.Create(System.Action{`0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},`0)" type="API" />
  <topic id="P:W.Threading.Thread`1.CustomData" type="API" />
  <topic id="M:W.Threading.Thread`1.InvokeAction" type="API" />
  <topic id="T:W.Threading.ThreadBase" type="API" />
  <topic id="Methods.T:W.Threading.ThreadBase" type="API" />
  <topic id="Properties.T:W.Threading.ThreadBase" type="API" />
  <topic id="Overload:W.Threading.ThreadBase.Join" type="API" />
  <topic id="M:W.Threading.ThreadBase.#ctor(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="P:W.Threading.ThreadBase.Action" type="API" />
  <topic id="M:W.Threading.ThreadBase.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.ThreadBase.CallInvokeOnComplete(System.Exception)" type="API" />
  <topic id="M:W.Threading.ThreadBase.Cancel" type="API" />
  <topic id="P:W.Threading.ThreadBase.Cts" type="API" />
  <topic id="M:W.Threading.ThreadBase.Dispose" type="API" />
  <topic id="M:W.Threading.ThreadBase.Finalize" type="API" />
  <topic id="M:W.Threading.ThreadBase.InvokeAction" type="API" />
  <topic id="M:W.Threading.ThreadBase.InvokeOnComplete(System.Exception)" type="API" />
  <topic id="P:W.Threading.ThreadBase.IsBusy" type="API" />
  <topic id="P:W.Threading.ThreadBase.IsRunning" type="API" />
  <topic id="M:W.Threading.ThreadBase.Join" type="API" />
  <topic id="M:W.Threading.ThreadBase.Join(System.Int32)" type="API" />
  <topic id="P:W.Threading.ThreadBase.OnComplete" type="API" />
  <topic id="P:W.Threading.ThreadBase.Success" type="API" />
  <topic id="M:W.Threading.ThreadBase.ThreadProc" type="API" />
  <topic id="T:W.Threading.ThreadExtensions" type="API" />
  <topic id="Methods.T:W.Threading.ThreadExtensions" type="API" />
  <topic id="Overload:W.Threading.ThreadExtensions.CreateThread" type="API" />
  <topic id="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},``0)" type="API" />
  <topic id="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="R:Project_Tungsten.Documentation" type="API" />
</topics>