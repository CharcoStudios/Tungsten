<?xml version="1.0" encoding="utf-8"?>
<topics>
  <topic id="N:W" type="API" />
  <topic id="T:W.ActionQueue`1" type="API" />
  <topic id="Methods.T:W.ActionQueue`1" type="API" />
  <topic id="Properties.T:W.ActionQueue`1" type="API" />
  <topic id="Overload:W.ActionQueue`1.#ctor" type="API" />
  <topic id="M:W.ActionQueue`1.#ctor(System.Action{`0},System.String)" type="API" />
  <topic id="M:W.ActionQueue`1.#ctor(System.Func{`0,System.Boolean},System.String)" type="API" />
  <topic id="M:W.ActionQueue`1.Cancel" type="API" />
  <topic id="P:W.ActionQueue`1.Count" type="API" />
  <topic id="M:W.ActionQueue`1.Dispose" type="API" />
  <topic id="M:W.ActionQueue`1.Enqueue(`0)" type="API" />
  <topic id="M:W.ActionQueue`1.Finalize" type="API" />
  <topic id="P:W.ActionQueue`1.Queue" type="API" />
  <topic id="T:W.AsExtensions" type="API" />
  <topic id="Methods.T:W.AsExtensions" type="API" />
  <topic id="Overload:W.AsExtensions.AsBase64" type="API" />
  <topic id="Overload:W.AsExtensions.AsStream" type="API" />
  <topic id="Overload:W.AsExtensions.AsString" type="API" />
  <topic id="M:W.AsExtensions.As``1(System.Object)" type="API" />
  <topic id="M:W.AsExtensions.AsBase64(System.Byte[])" type="API" />
  <topic id="M:W.AsExtensions.AsBase64(System.String)" type="API" />
  <topic id="M:W.AsExtensions.AsBytes(System.String)" type="API" />
  <topic id="M:W.AsExtensions.AsCompressed(System.Byte[])" type="API" />
  <topic id="M:W.AsExtensions.AsDecompressed(System.Byte[])" type="API" />
  <topic id="M:W.AsExtensions.AsJson``1(System.Object)" type="API" />
  <topic id="M:W.AsExtensions.AsStream(System.Byte[])" type="API" />
  <topic id="M:W.AsExtensions.AsStream(System.String)" type="API" />
  <topic id="M:W.AsExtensions.AsString(System.Byte[])" type="API" />
  <topic id="M:W.AsExtensions.AsString(System.Byte[],System.Int32,System.Int32)" type="API" />
  <topic id="M:W.AsExtensions.AsXml``1(System.Object)" type="API" />
  <topic id="T:W.CallResult" type="API" />
  <topic id="Methods.T:W.CallResult" type="API" />
  <topic id="Properties.T:W.CallResult" type="API" />
  <topic id="Overload:W.CallResult.#ctor" type="API" />
  <topic id="M:W.CallResult.#ctor" type="API" />
  <topic id="M:W.CallResult.#ctor(System.Boolean)" type="API" />
  <topic id="M:W.CallResult.#ctor(System.Boolean,System.Exception)" type="API" />
  <topic id="P:W.CallResult.Empty" type="API" />
  <topic id="P:W.CallResult.Exception" type="API" />
  <topic id="P:W.CallResult.Success" type="API" />
  <topic id="T:W.CallResult`1" type="API" />
  <topic id="Methods.T:W.CallResult`1" type="API" />
  <topic id="Properties.T:W.CallResult`1" type="API" />
  <topic id="Overload:W.CallResult`1.#ctor" type="API" />
  <topic id="M:W.CallResult`1.#ctor" type="API" />
  <topic id="M:W.CallResult`1.#ctor(System.Boolean)" type="API" />
  <topic id="M:W.CallResult`1.#ctor(System.Boolean,`0)" type="API" />
  <topic id="M:W.CallResult`1.#ctor(System.Boolean,`0,System.Exception)" type="API" />
  <topic id="P:W.CallResult`1.Empty" type="API" />
  <topic id="P:W.CallResult`1.Result" type="API" />
  <topic id="T:W.ExtensionMethods" type="API" />
  <topic id="Methods.T:W.ExtensionMethods" type="API" />
  <topic id="Overload:W.ExtensionMethods.WaitForValue" type="API" />
  <topic id="M:W.ExtensionMethods.Lock``1(``0,System.Action{``0})" type="API" />
  <topic id="M:W.ExtensionMethods.WaitForValue(System.Object,System.Object,System.Int32)" type="API" />
  <topic id="M:W.ExtensionMethods.WaitForValue``1(``0,System.Predicate{``0},System.Int32)" type="API" />
  <topic id="T:W.FromExtensions" type="API" />
  <topic id="Methods.T:W.FromExtensions" type="API" />
  <topic id="Overload:W.FromExtensions.FromBase64" type="API" />
  <topic id="Overload:W.FromExtensions.FromJson" type="API" />
  <topic id="Overload:W.FromExtensions.FromXml" type="API" />
  <topic id="M:W.FromExtensions.FromBase64(System.Byte[])" type="API" />
  <topic id="M:W.FromExtensions.FromBase64(System.String)" type="API" />
  <topic id="M:W.FromExtensions.FromCompressed(System.Byte[])" type="API" />
  <topic id="M:W.FromExtensions.FromJson``1(System.Byte[])" type="API" />
  <topic id="M:W.FromExtensions.FromJson``1(System.String)" type="API" />
  <topic id="M:W.FromExtensions.FromXml``1(System.Byte[])" type="API" />
  <topic id="M:W.FromExtensions.FromXml``1(System.String)" type="API" />
  <topic id="T:W.InvokeExtensions" type="API" />
  <topic id="Methods.T:W.InvokeExtensions" type="API" />
  <topic id="Overload:W.InvokeExtensions.InvokeEx" type="API" />
  <topic id="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" type="API" />
  <topic id="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" type="API" />
  <topic id="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" type="API" />
  <topic id="T:W.IOwnedProperty" type="API" />
  <topic id="Methods.T:W.IOwnedProperty" type="API" />
  <topic id="M:W.IOwnedProperty.SetOwner(System.Object)" type="API" />
  <topic id="T:W.IProperty" type="API" />
  <topic id="Properties.T:W.IProperty" type="API" />
  <topic id="P:W.IProperty.IsDirty" type="API" />
  <topic id="T:W.IProperty`1" type="API" />
  <topic id="Properties.T:W.IProperty`1" type="API" />
  <topic id="P:W.IProperty`1.Value" type="API" />
  <topic id="T:W.Lockable`1" type="API" />
  <topic id="Methods.T:W.Lockable`1" type="API" />
  <topic id="Properties.T:W.Lockable`1" type="API" />
  <topic id="Overload:W.Lockable`1.#ctor" type="API" />
  <topic id="Overload:W.Lockable`1.ExecuteInLock" type="API" />
  <topic id="Overload:W.Lockable`1.ExecuteInLockAsync" type="API" />
  <topic id="M:W.Lockable`1.#ctor" type="API" />
  <topic id="M:W.Lockable`1.#ctor(`0)" type="API" />
  <topic id="M:W.Lockable`1.ExecuteInLock(System.Action{`0})" type="API" />
  <topic id="M:W.Lockable`1.ExecuteInLock(System.Func{`0,`0})" type="API" />
  <topic id="M:W.Lockable`1.ExecuteInLockAsync(System.Action{`0})" type="API" />
  <topic id="M:W.Lockable`1.ExecuteInLockAsync(System.Func{`0,`0})" type="API" />
  <topic id="P:W.Lockable`1.LockObject" type="API" />
  <topic id="P:W.Lockable`1.UnlockedValue" type="API" />
  <topic id="P:W.Lockable`1.Value" type="API" />
  <topic id="T:W.Property`1" type="API" />
  <topic id="Methods.T:W.Property`1" type="API" />
  <topic id="Properties.T:W.Property`1" type="API" />
  <topic id="Events.T:W.Property`1" type="API" />
  <topic id="Fields.T:W.Property`1" type="API" />
  <topic id="Overload:W.Property`1.#ctor" type="API" />
  <topic id="M:W.Property`1.#ctor" type="API" />
  <topic id="M:W.Property`1.#ctor(`0)" type="API" />
  <topic id="M:W.Property`1.#ctor(`0,W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`1.#ctor(W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" type="API" />
  <topic id="T:W.Property`2" type="API" />
  <topic id="Methods.T:W.Property`2" type="API" />
  <topic id="Properties.T:W.Property`2" type="API" />
  <topic id="Events.T:W.Property`2" type="API" />
  <topic id="Fields.T:W.Property`2" type="API" />
  <topic id="Overload:W.Property`2.#ctor" type="API" />
  <topic id="M:W.Property`2.#ctor" type="API" />
  <topic id="M:W.Property`2.#ctor(`0)" type="API" />
  <topic id="M:W.Property`2.#ctor(`0,`1)" type="API" />
  <topic id="M:W.Property`2.#ctor(`0,`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`2.#ctor(`0,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`2.#ctor(`1)" type="API" />
  <topic id="M:W.Property`2.#ctor(`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="M:W.Property`2.#ctor(W.PropertyBase{`0,`1}.OnValueChangedDelegate)" type="API" />
  <topic id="T:W.PropertyBase`2" type="API" />
  <topic id="Methods.T:W.PropertyBase`2" type="API" />
  <topic id="Properties.T:W.PropertyBase`2" type="API" />
  <topic id="Events.T:W.PropertyBase`2" type="API" />
  <topic id="Fields.T:W.PropertyBase`2" type="API" />
  <topic id="M:W.PropertyBase`2.#ctor" type="API" />
  <topic id="P:W.PropertyBase`2.DefaultValue" type="API" />
  <topic id="M:W.PropertyBase`2.Dispose" type="API" />
  <topic id="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" type="API" />
  <topic id="M:W.PropertyBase`2.Finalize" type="API" />
  <topic id="M:W.PropertyBase`2.GetValue" type="API" />
  <topic id="P:W.PropertyBase`2.IsDirty" type="API" />
  <topic id="M:W.PropertyBase`2.LoadValue(`1)" type="API" />
  <topic id="M:W.PropertyBase`2.OnPropertyChanged(System.String)" type="API" />
  <topic id="F:W.PropertyBase`2.OnValueChanged" type="API" />
  <topic id="P:W.PropertyBase`2.Owner" type="API" />
  <topic id="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" type="API" />
  <topic id="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" type="API" />
  <topic id="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" type="API" />
  <topic id="M:W.PropertyBase`2.SetValue(System.Object,System.String)" type="API" />
  <topic id="P:W.PropertyBase`2.Value" type="API" />
  <topic id="E:W.PropertyBase`2.ValueChanged" type="API" />
  <topic id="E:W.PropertyBase`2.ValueChanging" type="API" />
  <topic id="M:W.PropertyBase`2.WaitForChanged(System.Int32)" type="API" />
  <topic id="T:W.PropertyBase`2.OnValueChangedDelegate" type="API" />
  <topic id="T:W.PropertyBase`2.PropertyValueChangedDelegate" type="API" />
  <topic id="T:W.PropertyBase`2.PropertyValueChangingDelegate" type="API" />
  <topic id="T:W.PropertyChangedNotifier" type="API" />
  <topic id="Methods.T:W.PropertyChangedNotifier" type="API" />
  <topic id="Events.T:W.PropertyChangedNotifier" type="API" />
  <topic id="M:W.PropertyChangedNotifier.#ctor" type="API" />
  <topic id="M:W.PropertyChangedNotifier.GetValue" type="API" />
  <topic id="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)" type="API" />
  <topic id="E:W.PropertyChangedNotifier.PropertyChanged" type="API" />
  <topic id="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" type="API" />
  <topic id="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)" type="API" />
  <topic id="T:W.PropertyHost" type="API" />
  <topic id="Methods.T:W.PropertyHost" type="API" />
  <topic id="Properties.T:W.PropertyHost" type="API" />
  <topic id="M:W.PropertyHost.#ctor" type="API" />
  <topic id="P:W.PropertyHost.IsDirty" type="API" />
  <topic id="M:W.PropertyHost.MarkAsClean" type="API" />
  <topic id="T:W.PropertyHostMethods" type="API" />
  <topic id="Methods.T:W.PropertyHostMethods" type="API" />
  <topic id="M:W.PropertyHostMethods.InitializeProperties(System.Object)" type="API" />
  <topic id="M:W.PropertyHostMethods.IsDirty(System.Object)" type="API" />
  <topic id="M:W.PropertyHostMethods.MarkAsClean(System.Object)" type="API" />
  <topic id="T:W.PropertyHostNotifier" type="API" />
  <topic id="Methods.T:W.PropertyHostNotifier" type="API" />
  <topic id="Properties.T:W.PropertyHostNotifier" type="API" />
  <topic id="Events.T:W.PropertyHostNotifier" type="API" />
  <topic id="M:W.PropertyHostNotifier.#ctor" type="API" />
  <topic id="P:W.PropertyHostNotifier.IsDirty" type="API" />
  <topic id="M:W.PropertyHostNotifier.MarkAsClean" type="API" />
  <topic id="T:W.Singleton`1" type="API" />
  <topic id="Methods.T:W.Singleton`1" type="API" />
  <topic id="Properties.T:W.Singleton`1" type="API" />
  <topic id="M:W.Singleton`1.#ctor" type="API" />
  <topic id="P:W.Singleton`1.Instance" type="API" />
  <topic id="T:W.StringExtensions" type="API" />
  <topic id="Methods.T:W.StringExtensions" type="API" />
  <topic id="M:W.StringExtensions.IsValidBase64(System.String)" type="API" />
  <topic id="N:W.Encryption" type="API" />
  <topic id="T:W.Encryption.MD5" type="API" />
  <topic id="Methods.T:W.Encryption.MD5" type="API" />
  <topic id="Overload:W.Encryption.MD5.GetMd5Hash" type="API" />
  <topic id="M:W.Encryption.MD5.#ctor" type="API" />
  <topic id="M:W.Encryption.MD5.GetMd5Hash(System.String)" type="API" />
  <topic id="M:W.Encryption.MD5.GetMd5Hash(System.String,System.Security.Cryptography.MD5)" type="API" />
  <topic id="M:W.Encryption.MD5.VerifyMd5Hash(System.String,System.String)" type="API" />
  <topic id="T:W.Encryption.PublicPrivateKeyPair" type="API" />
  <topic id="Methods.T:W.Encryption.PublicPrivateKeyPair" type="API" />
  <topic id="Properties.T:W.Encryption.PublicPrivateKeyPair" type="API" />
  <topic id="M:W.Encryption.PublicPrivateKeyPair.#ctor" type="API" />
  <topic id="P:W.Encryption.PublicPrivateKeyPair.PrivateKey" type="API" />
  <topic id="P:W.Encryption.PublicPrivateKeyPair.PublicKey" type="API" />
  <topic id="T:W.Encryption.RSA" type="API" />
  <topic id="Methods.T:W.Encryption.RSA" type="API" />
  <topic id="Properties.T:W.Encryption.RSA" type="API" />
  <topic id="Overload:W.Encryption.RSA.Decrypt" type="API" />
  <topic id="Overload:W.Encryption.RSA.Encrypt" type="API" />
  <topic id="M:W.Encryption.RSA.#ctor(System.Int32)" type="API" />
  <topic id="M:W.Encryption.RSA.Decrypt(System.String)" type="API" />
  <topic id="M:W.Encryption.RSA.Decrypt(System.String,System.Security.Cryptography.RSAParameters)" type="API" />
  <topic id="M:W.Encryption.RSA.Dispose" type="API" />
  <topic id="M:W.Encryption.RSA.Encrypt(System.Byte[],System.Security.Cryptography.RSAParameters)" type="API" />
  <topic id="M:W.Encryption.RSA.Encrypt(System.String)" type="API" />
  <topic id="M:W.Encryption.RSA.Encrypt(System.String,System.Security.Cryptography.RSAParameters)" type="API" />
  <topic id="M:W.Encryption.RSA.Finalize" type="API" />
  <topic id="P:W.Encryption.RSA.LegalKeySizes" type="API" />
  <topic id="P:W.Encryption.RSA.PrivateKey" type="API" />
  <topic id="P:W.Encryption.RSA.PublicKey" type="API" />
  <topic id="T:W.Encryption.RSAMethods" type="API" />
  <topic id="Methods.T:W.Encryption.RSAMethods" type="API" />
  <topic id="Overload:W.Encryption.RSAMethods.Decrypt" type="API" />
  <topic id="Overload:W.Encryption.RSAMethods.Encrypt" type="API" />
  <topic id="M:W.Encryption.RSAMethods.#ctor" type="API" />
  <topic id="M:W.Encryption.RSAMethods.Decrypt(System.String,System.Security.Cryptography.RSAParameters,System.Int32)" type="API" />
  <topic id="M:W.Encryption.RSAMethods.Decrypt(System.String,System.String,System.Int32)" type="API" />
  <topic id="M:W.Encryption.RSAMethods.Encrypt(System.Byte[],System.Security.Cryptography.RSAParameters,System.Int32)" type="API" />
  <topic id="M:W.Encryption.RSAMethods.Encrypt(System.Byte[],System.String,System.Int32)" type="API" />
  <topic id="M:W.Encryption.RSAMethods.Encrypt(System.String,System.Security.Cryptography.RSAParameters,System.Int32)" type="API" />
  <topic id="M:W.Encryption.RSAMethods.Encrypt(System.String,System.String,System.Int32)" type="API" />
  <topic id="N:W.Logging" type="API" />
  <topic id="T:W.Logging.CustomLogger" type="API" />
  <topic id="Methods.T:W.Logging.CustomLogger" type="API" />
  <topic id="Properties.T:W.Logging.CustomLogger" type="API" />
  <topic id="M:W.Logging.CustomLogger.#ctor(System.String,System.Boolean)" type="API" />
  <topic id="P:W.Logging.CustomLogger.AddTimestamp" type="API" />
  <topic id="M:W.Logging.CustomLogger.Dispose" type="API" />
  <topic id="M:W.Logging.CustomLogger.FormatLogMessage(W.Logging.Log.LogMessageCategory,System.String)" type="API" />
  <topic id="P:W.Logging.CustomLogger.IsDisposed" type="API" />
  <topic id="M:W.Logging.CustomLogger.LogMessage(W.Logging.Log.LogMessageCategory,System.String)" type="API" />
  <topic id="P:W.Logging.CustomLogger.Name" type="API" />
  <topic id="M:W.Logging.CustomLogger.OnDispose" type="API" />
  <topic id="T:W.Logging.Log" type="API" />
  <topic id="Methods.T:W.Logging.Log" type="API" />
  <topic id="Properties.T:W.Logging.Log" type="API" />
  <topic id="Overload:W.Logging.Log.e" type="API" />
  <topic id="Overload:W.Logging.Log.i" type="API" />
  <topic id="Overload:W.Logging.Log.v" type="API" />
  <topic id="Overload:W.Logging.Log.w" type="API" />
  <topic id="M:W.Logging.Log.e(System.Exception,System.String,System.Int32)" type="API" />
  <topic id="M:W.Logging.Log.e(System.String,System.Object[])" type="API" />
  <topic id="M:W.Logging.Log.i(System.String,System.Object[])" type="API" />
  <topic id="M:W.Logging.Log.i(System.String,System.String,System.Int32)" type="API" />
  <topic id="P:W.Logging.Log.LogTheMessage" type="API" />
  <topic id="P:W.Logging.Log.MessageHistory" type="API" />
  <topic id="M:W.Logging.Log.v(System.String,System.Object[])" type="API" />
  <topic id="M:W.Logging.Log.v(System.String,System.String,System.Int32)" type="API" />
  <topic id="M:W.Logging.Log.w(System.String,System.Object[])" type="API" />
  <topic id="M:W.Logging.Log.w(System.String,System.String,System.Int32)" type="API" />
  <topic id="T:W.Logging.Log.LogMessageCategory" type="API" />
  <topic id="T:W.Logging.Log.LogMessageHistory" type="API" />
  <topic id="Methods.T:W.Logging.Log.LogMessageHistory" type="API" />
  <topic id="Properties.T:W.Logging.Log.LogMessageHistory" type="API" />
  <topic id="M:W.Logging.Log.LogMessageHistory.#ctor(System.Boolean)" type="API" />
  <topic id="P:W.Logging.Log.LogMessageHistory.Enabled" type="API" />
  <topic id="P:W.Logging.Log.LogMessageHistory.MaximumNumberOfMessages" type="API" />
  <topic id="P:W.Logging.Log.LogMessageHistory.Messages" type="API" />
  <topic id="T:W.Logging.Log.LogMessageHistory.LogMessage" type="API" />
  <topic id="Methods.T:W.Logging.Log.LogMessageHistory.LogMessage" type="API" />
  <topic id="Properties.T:W.Logging.Log.LogMessageHistory.LogMessage" type="API" />
  <topic id="M:W.Logging.Log.LogMessageHistory.LogMessage.#ctor" type="API" />
  <topic id="P:W.Logging.Log.LogMessageHistory.LogMessage.Category" type="API" />
  <topic id="P:W.Logging.Log.LogMessageHistory.LogMessage.Message" type="API" />
  <topic id="N:W.Threading" type="API" />
  <topic id="T:W.Threading.Gate" type="API" />
  <topic id="Methods.T:W.Threading.Gate" type="API" />
  <topic id="Properties.T:W.Threading.Gate" type="API" />
  <topic id="Overload:W.Threading.Gate.Cancel" type="API" />
  <topic id="Overload:W.Threading.Gate.Join" type="API" />
  <topic id="M:W.Threading.Gate.#ctor(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="M:W.Threading.Gate.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.Gate.Cancel" type="API" />
  <topic id="M:W.Threading.Gate.Dispose" type="API" />
  <topic id="M:W.Threading.Gate.Join" type="API" />
  <topic id="M:W.Threading.Gate.Join(System.Int32)" type="API" />
  <topic id="M:W.Threading.Gate.Run" type="API" />
  <topic id="T:W.Threading.Gate`1" type="API" />
  <topic id="Methods.T:W.Threading.Gate`1" type="API" />
  <topic id="Properties.T:W.Threading.Gate`1" type="API" />
  <topic id="Overload:W.Threading.Gate`1.Cancel" type="API" />
  <topic id="Overload:W.Threading.Gate`1.Join" type="API" />
  <topic id="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},`0)" type="API" />
  <topic id="M:W.Threading.Gate`1.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.Gate`1.Cancel" type="API" />
  <topic id="M:W.Threading.Gate`1.Dispose" type="API" />
  <topic id="M:W.Threading.Gate`1.Join" type="API" />
  <topic id="M:W.Threading.Gate`1.Join(System.Int32)" type="API" />
  <topic id="M:W.Threading.Gate`1.Run" type="API" />
  <topic id="T:W.Threading.GateMethods" type="API" />
  <topic id="Methods.T:W.Threading.GateMethods" type="API" />
  <topic id="Overload:W.Threading.GateMethods.AsGate" type="API" />
  <topic id="M:W.Threading.GateMethods.AsGate(System.Action{System.Threading.CancellationTokenSource})" type="API" />
  <topic id="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationTokenSource})" type="API" />
  <topic id="T:W.Threading.Thread" type="API" />
  <topic id="Methods.T:W.Threading.Thread" type="API" />
  <topic id="Properties.T:W.Threading.Thread" type="API" />
  <topic id="Overload:W.Threading.Thread.Cancel" type="API" />
  <topic id="Overload:W.Threading.Thread.Join" type="API" />
  <topic id="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},System.Threading.CancellationTokenSource)" type="API" />
  <topic id="M:W.Threading.Thread.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.Thread.CallInvokeOnComplete(System.Exception)" type="API" />
  <topic id="M:W.Threading.Thread.Cancel" type="API" />
  <topic id="M:W.Threading.Thread.Cancel(System.Int32)" type="API" />
  <topic id="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},System.Threading.CancellationTokenSource)" type="API" />
  <topic id="M:W.Threading.Thread.Dispose" type="API" />
  <topic id="M:W.Threading.Thread.Join" type="API" />
  <topic id="M:W.Threading.Thread.Join(System.Int32)" type="API" />
  <topic id="M:W.Threading.Thread.Sleep(System.Int32)" type="API" />
  <topic id="T:W.Threading.Thread`1" type="API" />
  <topic id="Methods.T:W.Threading.Thread`1" type="API" />
  <topic id="Properties.T:W.Threading.Thread`1" type="API" />
  <topic id="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},`0,System.Threading.CancellationTokenSource)" type="API" />
  <topic id="P:W.Threading.Thread`1.Action" type="API" />
  <topic id="M:W.Threading.Thread`1.Create``1(System.Action{``0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},``0,System.Threading.CancellationTokenSource)" type="API" />
  <topic id="P:W.Threading.Thread`1.CustomData" type="API" />
  <topic id="M:W.Threading.Thread`1.InvokeAction(System.Threading.CancellationTokenSource)" type="API" />
  <topic id="T:W.Threading.ThreadBase" type="API" />
  <topic id="Methods.T:W.Threading.ThreadBase" type="API" />
  <topic id="Properties.T:W.Threading.ThreadBase" type="API" />
  <topic id="Overload:W.Threading.ThreadBase.Cancel" type="API" />
  <topic id="Overload:W.Threading.ThreadBase.Join" type="API" />
  <topic id="M:W.Threading.ThreadBase.#ctor(System.Action{System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},System.Threading.CancellationTokenSource)" type="API" />
  <topic id="P:W.Threading.ThreadBase.Action" type="API" />
  <topic id="M:W.Threading.ThreadBase.CallInvokeAction" type="API" />
  <topic id="M:W.Threading.ThreadBase.CallInvokeOnComplete(System.Exception)" type="API" />
  <topic id="M:W.Threading.ThreadBase.Cancel" type="API" />
  <topic id="M:W.Threading.ThreadBase.Cancel(System.Int32)" type="API" />
  <topic id="P:W.Threading.ThreadBase.Cts" type="API" />
  <topic id="M:W.Threading.ThreadBase.Dispose" type="API" />
  <topic id="M:W.Threading.ThreadBase.Finalize" type="API" />
  <topic id="M:W.Threading.ThreadBase.InvokeAction(System.Threading.CancellationTokenSource)" type="API" />
  <topic id="M:W.Threading.ThreadBase.InvokeOnComplete(System.Exception)" type="API" />
  <topic id="P:W.Threading.ThreadBase.IsBusy" type="API" />
  <topic id="P:W.Threading.ThreadBase.IsRunning" type="API" />
  <topic id="M:W.Threading.ThreadBase.Join" type="API" />
  <topic id="M:W.Threading.ThreadBase.Join(System.Int32)" type="API" />
  <topic id="P:W.Threading.ThreadBase.OnExit" type="API" />
  <topic id="P:W.Threading.ThreadBase.Success" type="API" />
  <topic id="M:W.Threading.ThreadBase.ThreadProc" type="API" />
  <topic id="T:W.Threading.ThreadExtensions" type="API" />
  <topic id="Methods.T:W.Threading.ThreadExtensions" type="API" />
  <topic id="Overload:W.Threading.ThreadExtensions.CreateThread" type="API" />
  <topic id="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception},``0)" type="API" />
  <topic id="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationTokenSource},System.Action{System.Boolean,System.Exception})" type="API" />
  <topic id="R:Project_Tungsten" type="API" />
</topics>