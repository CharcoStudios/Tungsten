<?xml version="1.0" encoding="utf-8"?>
<reflection xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:ddue="urn:ddue-extensions">
  <assemblies>
    <assembly name="Tungsten">
      <assemblydata version="1.3.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.3.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:W">
      <topicdata group="api" />
      <apidata name="W" group="namespace" />
      <elements>
        <element api="T:W.ActionQueue`1" />
        <element api="T:W.AsExtensions" />
        <element api="T:W.CallResult`1" />
        <element api="T:W.CallResult" />
        <element api="T:W.Disposable" />
        <element api="T:W.EventTemplate" />
        <element api="T:W.EventTemplate.EventDelegate" />
        <element api="T:W.EventTemplate`1" />
        <element api="T:W.EventTemplate`1.EventDelegate" />
        <element api="T:W.EventTemplate`2" />
        <element api="T:W.EventTemplate`2.EventDelegate" />
        <element api="T:W.EventTemplate`3" />
        <element api="T:W.EventTemplate`3.EventDelegate" />
        <element api="T:W.EventTemplate`4" />
        <element api="T:W.EventTemplate`4.EventDelegate" />
        <element api="T:W.EventTemplate`5" />
        <element api="T:W.EventTemplate`5.EventDelegate" />
        <element api="T:W.FromExtensions" />
        <element api="T:W.InvokeExtensions" />
        <element api="T:W.Lockable`1" />
        <element api="T:W.IOwnedProperty" />
        <element api="T:W.IProperty`1" />
        <element api="T:W.IProperty" />
        <element api="T:W.Property`2" />
        <element api="T:W.Property`1" />
        <element api="T:W.PropertyBase`2" />
        <element api="T:W.PropertyBase`2.PropertyValueChangingDelegate" />
        <element api="T:W.PropertyBase`2.PropertyValueChangedDelegate" />
        <element api="T:W.PropertyBase`2.OnValueChangedDelegate" />
        <element api="T:W.PropertyChangedNotifier" />
        <element api="T:W.PropertyHost" />
        <element api="T:W.PropertyHostMethods" />
        <element api="T:W.PropertyHostNotifier" />
        <element api="T:W.Singleton`1" />
        <element api="T:W.StringExtensions" />
        <element api="T:W.ExtensionMethods" />
      </elements>
      <file name="N_W" />
    </api>
    <api id="T:W.ActionQueue`1">
      <topicdata group="api" />
      <apidata name="ActionQueue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.ActionQueue`1.#ctor">
          <element api="M:W.ActionQueue`1.#ctor(System.Action{`0},System.String)" />
          <element api="M:W.ActionQueue`1.#ctor(System.Func{`0,System.Boolean},System.String)" />
        </element>
        <element api="M:W.ActionQueue`1.Cancel" />
        <element api="P:W.ActionQueue`1.Count" />
        <element api="M:W.ActionQueue`1.Dispose" />
        <element api="M:W.ActionQueue`1.Enqueue(`0)" />
        <element api="M:W.ActionQueue`1.Finalize" />
        <element api="P:W.ActionQueue`1.Queue" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_ActionQueue_1" />
    </api>
    <api id="Methods.T:W.ActionQueue`1">
      <topicdata name="ActionQueue" group="list" subgroup="Methods" typeTopicId="T:W.ActionQueue`1" />
      <apidata name="ActionQueue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.ActionQueue`1.Cancel" />
        <element api="M:W.ActionQueue`1.Dispose" />
        <element api="M:W.ActionQueue`1.Enqueue(`0)" />
        <element api="M:W.ActionQueue`1.Finalize" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" />
      </containers>
      <file name="Methods_T_W_ActionQueue_1" />
    </api>
    <api id="Properties.T:W.ActionQueue`1">
      <topicdata name="ActionQueue" group="list" subgroup="Properties" typeTopicId="T:W.ActionQueue`1" />
      <apidata name="ActionQueue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:W.ActionQueue`1.Count" />
        <element api="P:W.ActionQueue`1.Queue" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" />
      </containers>
      <file name="Properties_T_W_ActionQueue_1" />
    </api>
    <api id="Overload:W.ActionQueue`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.ActionQueue`1.#ctor(System.Action{`0},System.String)" />
        <element api="M:W.ActionQueue`1.#ctor(System.Func{`0,System.Boolean},System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="Overload_W_ActionQueue_1__ctor" />
    </api>
    <api id="M:W.ActionQueue`1.#ctor(System.Action{`0},System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.ActionQueue`1.#ctor" />
      <parameters>
        <parameter name="onItemAdded">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:W.ActionQueue`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="M_W_ActionQueue_1__ctor" />
    </api>
    <api id="M:W.ActionQueue`1.#ctor(System.Func{`0,System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.ActionQueue`1.#ctor" />
      <parameters>
        <parameter name="onItemAdded">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:W.ActionQueue`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="caller" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="M_W_ActionQueue_1__ctor_1" />
    </api>
    <api id="M:W.ActionQueue`1.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="M_W_ActionQueue_1_Cancel" />
    </api>
    <api id="P:W.ActionQueue`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="P_W_ActionQueue_1_Count" />
    </api>
    <api id="M:W.ActionQueue`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="M_W_ActionQueue_1_Dispose" />
    </api>
    <api id="M:W.ActionQueue`1.Enqueue(`0)">
      <topicdata group="api" />
      <apidata name="Enqueue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:W.ActionQueue`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="M_W_ActionQueue_1_Enqueue" />
    </api>
    <api id="M:W.ActionQueue`1.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="M_W_ActionQueue_1_Finalize" />
    </api>
    <api id="P:W.ActionQueue`1.Queue">
      <topicdata group="api" />
      <apidata name="Queue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Queue" />
      <returns>
        <type api="T:System.Collections.Concurrent.ConcurrentQueue`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:W.ActionQueue`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ActionQueue`1" ref="true" />
      </containers>
      <file name="P_W_ActionQueue_1_Queue" />
    </api>
    <api id="T:W.AsExtensions">
      <topicdata group="api" />
      <apidata name="AsExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:W.AsExtensions.As``1(System.Object)" />
        <element api="Overload:W.AsExtensions.AsBase64">
          <element api="M:W.AsExtensions.AsBase64(System.Byte[])" />
          <element api="M:W.AsExtensions.AsBase64(System.String)" />
        </element>
        <element api="M:W.AsExtensions.AsBytes(System.String)" />
        <element api="M:W.AsExtensions.AsCompressed(System.Byte[])" />
        <element api="M:W.AsExtensions.AsDecompressed(System.Byte[])" />
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" />
        <element api="Overload:W.AsExtensions.AsStream">
          <element api="M:W.AsExtensions.AsStream(System.Byte[])" />
          <element api="M:W.AsExtensions.AsStream(System.String)" />
        </element>
        <element api="Overload:W.AsExtensions.AsString">
          <element api="M:W.AsExtensions.AsString(System.Byte[])" />
          <element api="M:W.AsExtensions.AsString(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_AsExtensions" />
    </api>
    <api id="Methods.T:W.AsExtensions">
      <topicdata name="AsExtensions" group="list" subgroup="Methods" typeTopicId="T:W.AsExtensions" />
      <apidata name="AsExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:W.AsExtensions.As``1(System.Object)" />
        <element api="Overload:W.AsExtensions.AsBase64">
          <element api="M:W.AsExtensions.AsBase64(System.Byte[])" />
          <element api="M:W.AsExtensions.AsBase64(System.String)" />
        </element>
        <element api="M:W.AsExtensions.AsBytes(System.String)" />
        <element api="M:W.AsExtensions.AsCompressed(System.Byte[])" />
        <element api="M:W.AsExtensions.AsDecompressed(System.Byte[])" />
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" />
        <element api="Overload:W.AsExtensions.AsStream">
          <element api="M:W.AsExtensions.AsStream(System.Byte[])" />
          <element api="M:W.AsExtensions.AsStream(System.String)" />
        </element>
        <element api="Overload:W.AsExtensions.AsString">
          <element api="M:W.AsExtensions.AsString(System.Byte[])" />
          <element api="M:W.AsExtensions.AsString(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" />
      </containers>
      <file name="Methods_T_W_AsExtensions" />
    </api>
    <api id="Overload:W.AsExtensions.AsBase64">
      <topicdata name="AsBase64" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AsBase64" group="member" subgroup="method" />
      <elements>
        <element api="M:W.AsExtensions.AsBase64(System.Byte[])" />
        <element api="M:W.AsExtensions.AsBase64(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <file name="Overload_W_AsExtensions_AsBase64" />
    </api>
    <api id="Overload:W.AsExtensions.AsStream">
      <topicdata name="AsStream" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AsStream" group="member" subgroup="method" />
      <elements>
        <element api="M:W.AsExtensions.AsStream(System.Byte[])" />
        <element api="M:W.AsExtensions.AsStream(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <file name="Overload_W_AsExtensions_AsStream" />
    </api>
    <api id="Overload:W.AsExtensions.AsString">
      <topicdata name="AsString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AsString" group="member" subgroup="method" />
      <elements>
        <element api="M:W.AsExtensions.AsString(System.Byte[])" />
        <element api="M:W.AsExtensions.AsString(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <file name="Overload_W_AsExtensions_AsString" />
    </api>
    <api id="M:W.AsExtensions.As``1(System.Object)">
      <topicdata group="api" />
      <apidata name="As" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_As__1" />
    </api>
    <api id="M:W.AsExtensions.AsBase64(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.AsExtensions.AsBase64" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsBase64" />
    </api>
    <api id="M:W.AsExtensions.AsBase64(System.String)">
      <topicdata group="api" />
      <apidata name="AsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.AsExtensions.AsBase64" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsBase64_1" />
    </api>
    <api id="M:W.AsExtensions.AsBytes(System.String)">
      <topicdata group="api" />
      <apidata name="AsBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsBytes" />
    </api>
    <api id="M:W.AsExtensions.AsCompressed(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsCompressed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsCompressed" />
    </api>
    <api id="M:W.AsExtensions.AsDecompressed(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsDecompressed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use FromCompressed instead.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsDecompressed" />
    </api>
    <api id="M:W.AsExtensions.AsJson``1(System.Object)">
      <topicdata group="api" />
      <apidata name="AsJson" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsJson__1" />
    </api>
    <api id="M:W.AsExtensions.AsStream(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.AsExtensions.AsStream" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.MemoryStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsStream" />
    </api>
    <api id="M:W.AsExtensions.AsStream(System.String)">
      <topicdata group="api" />
      <apidata name="AsStream" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.AsExtensions.AsStream" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.MemoryStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsStream_1" />
    </api>
    <api id="M:W.AsExtensions.AsString(System.Byte[])">
      <topicdata group="api" />
      <apidata name="AsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.AsExtensions.AsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsString" />
    </api>
    <api id="M:W.AsExtensions.AsString(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="AsString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.AsExtensions.AsString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsString_1" />
    </api>
    <api id="M:W.AsExtensions.AsXml``1(System.Object)">
      <topicdata group="api" />
      <apidata name="AsXml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.AsExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_AsExtensions_AsXml__1" />
    </api>
    <api id="T:W.CallResult">
      <topicdata group="api" />
      <apidata name="CallResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:W.CallResult`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.CallResult.#ctor">
          <element api="M:W.CallResult.#ctor" />
          <element api="M:W.CallResult.#ctor(System.Boolean)" />
          <element api="M:W.CallResult.#ctor(System.Boolean,System.Exception)" />
        </element>
        <element api="P:W.CallResult.Empty" />
        <element api="P:W.CallResult.Exception" />
        <element api="P:W.CallResult.Success" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_CallResult" />
    </api>
    <api id="Methods.T:W.CallResult">
      <topicdata name="CallResult" group="list" subgroup="Methods" typeTopicId="T:W.CallResult" />
      <apidata name="CallResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" />
      </containers>
      <file name="Methods_T_W_CallResult" />
    </api>
    <api id="Properties.T:W.CallResult">
      <topicdata name="CallResult" group="list" subgroup="Properties" typeTopicId="T:W.CallResult" />
      <apidata name="CallResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.CallResult.Empty" />
        <element api="P:W.CallResult.Exception" />
        <element api="P:W.CallResult.Success" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" />
      </containers>
      <file name="Properties_T_W_CallResult" />
    </api>
    <api id="Overload:W.CallResult.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.CallResult.#ctor" />
        <element api="M:W.CallResult.#ctor(System.Boolean)" />
        <element api="M:W.CallResult.#ctor(System.Boolean,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="Overload_W_CallResult__ctor" />
    </api>
    <api id="M:W.CallResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult.#ctor" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="M_W_CallResult__ctor" />
    </api>
    <api id="M:W.CallResult.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult.#ctor" />
      <parameters>
        <parameter name="success">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="M_W_CallResult__ctor_1" />
    </api>
    <api id="M:W.CallResult.#ctor(System.Boolean,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult.#ctor" />
      <parameters>
        <parameter name="success">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="M_W_CallResult__ctor_2" />
    </api>
    <api id="P:W.CallResult.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Empty" />
      <returns>
        <type api="T:W.CallResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="P_W_CallResult_Empty" />
    </api>
    <api id="P:W.CallResult.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="P_W_CallResult_Exception" />
    </api>
    <api id="P:W.CallResult.Success">
      <topicdata group="api" />
      <apidata name="Success" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Success" />
      <setter name="set_Success" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult" ref="true" />
      </containers>
      <file name="P_W_CallResult_Success" />
    </api>
    <api id="T:W.CallResult`1">
      <topicdata group="api" />
      <apidata name="CallResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.CallResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:W.CallResult.Exception" />
        <element api="P:W.CallResult.Success" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.CallResult`1.#ctor">
          <element api="M:W.CallResult`1.#ctor" />
          <element api="M:W.CallResult`1.#ctor(System.Boolean)" />
          <element api="M:W.CallResult`1.#ctor(System.Boolean,`0)" />
          <element api="M:W.CallResult`1.#ctor(System.Boolean,`0,System.Exception)" />
        </element>
        <element api="P:W.CallResult`1.Empty" />
        <element api="P:W.CallResult`1.Result" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_CallResult_1" />
    </api>
    <api id="Methods.T:W.CallResult`1">
      <topicdata name="CallResult" group="list" subgroup="Methods" typeTopicId="T:W.CallResult`1" />
      <apidata name="CallResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" />
      </containers>
      <file name="Methods_T_W_CallResult_1" />
    </api>
    <api id="Properties.T:W.CallResult`1">
      <topicdata name="CallResult" group="list" subgroup="Properties" typeTopicId="T:W.CallResult`1" />
      <apidata name="CallResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:W.CallResult.Exception" />
        <element api="P:W.CallResult.Success" />
        <element api="P:W.CallResult`1.Empty" />
        <element api="P:W.CallResult`1.Result" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" />
      </containers>
      <file name="Properties_T_W_CallResult_1" />
    </api>
    <api id="Overload:W.CallResult`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.CallResult`1.#ctor" />
        <element api="M:W.CallResult`1.#ctor(System.Boolean)" />
        <element api="M:W.CallResult`1.#ctor(System.Boolean,`0)" />
        <element api="M:W.CallResult`1.#ctor(System.Boolean,`0,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="Overload_W_CallResult_1__ctor" />
    </api>
    <api id="M:W.CallResult`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult`1.#ctor" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="M_W_CallResult_1__ctor" />
    </api>
    <api id="M:W.CallResult`1.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult`1.#ctor" />
      <parameters>
        <parameter name="success">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="M_W_CallResult_1__ctor_1" />
    </api>
    <api id="M:W.CallResult`1.#ctor(System.Boolean,`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult`1.#ctor" />
      <parameters>
        <parameter name="success">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="result">
          <template name="TResult" index="0" api="T:W.CallResult`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="M_W_CallResult_1__ctor_2" />
    </api>
    <api id="M:W.CallResult`1.#ctor(System.Boolean,`0,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.CallResult`1.#ctor" />
      <parameters>
        <parameter name="success">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="result">
          <template name="TResult" index="0" api="T:W.CallResult`1" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="M_W_CallResult_1__ctor_3" />
    </api>
    <api id="P:W.CallResult`1.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Empty" />
      <returns>
        <type api="T:W.CallResult`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:W.CallResult`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="P_W_CallResult_1_Empty" />
    </api>
    <api id="P:W.CallResult`1.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <template name="TResult" index="0" api="T:W.CallResult`1" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.CallResult`1" ref="true" />
      </containers>
      <file name="P_W_CallResult_1_Result" />
    </api>
    <api id="T:W.Disposable">
      <topicdata group="api" />
      <apidata name="Disposable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Disposable.#ctor" />
        <element api="M:W.Disposable.Dispose" />
        <element api="M:W.Disposable.Finalize" />
        <element api="F:W.Disposable.IsDisposed" />
        <element api="F:W.Disposable.IsDisposing" />
        <element api="M:W.Disposable.OnDispose" />
        <element api="M:W.Disposable.OnDisposeUnmanaged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_Disposable" />
    </api>
    <api id="Methods.T:W.Disposable">
      <topicdata name="Disposable" group="list" subgroup="Methods" typeTopicId="T:W.Disposable" />
      <apidata name="Disposable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Disposable.Dispose" />
        <element api="M:W.Disposable.Finalize" />
        <element api="M:W.Disposable.OnDispose" />
        <element api="M:W.Disposable.OnDisposeUnmanaged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" />
      </containers>
      <file name="Methods_T_W_Disposable" />
    </api>
    <api id="Fields.T:W.Disposable">
      <topicdata name="Disposable" group="list" subgroup="Fields" typeTopicId="T:W.Disposable" />
      <apidata name="Disposable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:W.Disposable.IsDisposed" />
        <element api="F:W.Disposable.IsDisposing" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" />
      </containers>
      <file name="Fields_T_W_Disposable" />
    </api>
    <api id="M:W.Disposable.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="M_W_Disposable__ctor" />
    </api>
    <api id="M:W.Disposable.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="M_W_Disposable_Dispose" />
    </api>
    <api id="M:W.Disposable.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="M_W_Disposable_Finalize" />
    </api>
    <api id="F:W.Disposable.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="F_W_Disposable_IsDisposed" />
    </api>
    <api id="F:W.Disposable.IsDisposing">
      <topicdata group="api" />
      <apidata name="IsDisposing" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="F_W_Disposable_IsDisposing" />
    </api>
    <api id="M:W.Disposable.OnDispose">
      <topicdata group="api" />
      <apidata name="OnDispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="M_W_Disposable_OnDispose" />
    </api>
    <api id="M:W.Disposable.OnDisposeUnmanaged">
      <topicdata group="api" />
      <apidata name="OnDisposeUnmanaged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Disposable" ref="true" />
      </containers>
      <file name="M_W_Disposable_OnDisposeUnmanaged" />
    </api>
    <api id="T:W.EventTemplate">
      <topicdata group="api" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate.#ctor" />
        <element api="E:W.EventTemplate.OnRaised" />
        <element api="M:W.EventTemplate.Raise(System.Object,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_EventTemplate" />
    </api>
    <api id="Methods.T:W.EventTemplate">
      <topicdata name="EventTemplate" group="list" subgroup="Methods" typeTopicId="T:W.EventTemplate" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate.Raise(System.Object,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate" />
      </containers>
      <file name="Methods_T_W_EventTemplate" />
    </api>
    <api id="Events.T:W.EventTemplate">
      <topicdata name="EventTemplate" group="list" subgroup="Events" typeTopicId="T:W.EventTemplate" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:W.EventTemplate.OnRaised" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate" />
      </containers>
      <file name="Events_T_W_EventTemplate" />
    </api>
    <api id="M:W.EventTemplate.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate" ref="true" />
      </containers>
      <file name="M_W_EventTemplate__ctor" />
    </api>
    <api id="E:W.EventTemplate.OnRaised">
      <topicdata group="api" />
      <apidata name="OnRaised" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRaised" />
      <remover name="remove_OnRaised" />
      <eventhandler>
        <type api="T:W.EventTemplate.EventDelegate" ref="true">
          <type api="T:W.EventTemplate" ref="true" />
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate" ref="true" />
      </containers>
      <file name="E_W_EventTemplate_OnRaised" />
    </api>
    <api id="M:W.EventTemplate.Raise(System.Object,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_Raise" />
    </api>
    <api id="T:W.EventTemplate`1">
      <topicdata group="api" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEventArg" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`1.#ctor" />
        <element api="E:W.EventTemplate`1.OnRaised" />
        <element api="M:W.EventTemplate`1.Raise(System.Object,`0,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_EventTemplate_1" />
    </api>
    <api id="Methods.T:W.EventTemplate`1">
      <topicdata name="EventTemplate" group="list" subgroup="Methods" typeTopicId="T:W.EventTemplate`1" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`1.Raise(System.Object,`0,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`1" />
      </containers>
      <file name="Methods_T_W_EventTemplate_1" />
    </api>
    <api id="Events.T:W.EventTemplate`1">
      <topicdata name="EventTemplate" group="list" subgroup="Events" typeTopicId="T:W.EventTemplate`1" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg" />
      </templates>
      <elements>
        <element api="E:W.EventTemplate`1.OnRaised" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`1" />
      </containers>
      <file name="Events_T_W_EventTemplate_1" />
    </api>
    <api id="M:W.EventTemplate`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`1" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_1__ctor" />
    </api>
    <api id="E:W.EventTemplate`1.OnRaised">
      <topicdata group="api" />
      <apidata name="OnRaised" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRaised" />
      <remover name="remove_OnRaised" />
      <eventhandler>
        <type api="T:W.EventTemplate`1.EventDelegate" ref="true">
          <type api="T:W.EventTemplate`1" ref="true">
            <specialization>
              <template name="TEventArg" index="0" api="T:W.EventTemplate`1" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`1" ref="true" />
      </containers>
      <file name="E_W_EventTemplate_1_OnRaised" />
    </api>
    <api id="M:W.EventTemplate`1.Raise(System.Object,`0,System.String)">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg">
          <template name="TEventArg" index="0" api="T:W.EventTemplate`1" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`1" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_1_Raise" />
    </api>
    <api id="T:W.EventTemplate`1.EventDelegate">
      <topicdata group="api" />
      <apidata name="EventDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg">
          <template name="TEventArg" index="0" api="T:W.EventTemplate`1" />
        </parameter>
        <parameter name="callerMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`1" ref="true" />
      </containers>
      <file name="T_W_EventTemplate_1_EventDelegate" />
    </api>
    <api id="T:W.EventTemplate`2">
      <topicdata group="api" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`2.#ctor" />
        <element api="E:W.EventTemplate`2.OnRaised" />
        <element api="M:W.EventTemplate`2.Raise(System.Object,`0,`1,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_EventTemplate_2" />
    </api>
    <api id="Methods.T:W.EventTemplate`2">
      <topicdata name="EventTemplate" group="list" subgroup="Methods" typeTopicId="T:W.EventTemplate`2" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`2.Raise(System.Object,`0,`1,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`2" />
      </containers>
      <file name="Methods_T_W_EventTemplate_2" />
    </api>
    <api id="Events.T:W.EventTemplate`2">
      <topicdata name="EventTemplate" group="list" subgroup="Events" typeTopicId="T:W.EventTemplate`2" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
      </templates>
      <elements>
        <element api="E:W.EventTemplate`2.OnRaised" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`2" />
      </containers>
      <file name="Events_T_W_EventTemplate_2" />
    </api>
    <api id="M:W.EventTemplate`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`2" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_2__ctor" />
    </api>
    <api id="E:W.EventTemplate`2.OnRaised">
      <topicdata group="api" />
      <apidata name="OnRaised" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRaised" />
      <remover name="remove_OnRaised" />
      <eventhandler>
        <type api="T:W.EventTemplate`2.EventDelegate" ref="true">
          <type api="T:W.EventTemplate`2" ref="true">
            <specialization>
              <template name="TEventArg1" index="0" api="T:W.EventTemplate`2" />
              <template name="TEventArg2" index="1" api="T:W.EventTemplate`2" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`2" ref="true" />
      </containers>
      <file name="E_W_EventTemplate_2_OnRaised" />
    </api>
    <api id="M:W.EventTemplate`2.Raise(System.Object,`0,`1,System.String)">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`2" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`2" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`2" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_2_Raise" />
    </api>
    <api id="T:W.EventTemplate`2.EventDelegate">
      <topicdata group="api" />
      <apidata name="EventDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`2" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`2" />
        </parameter>
        <parameter name="callerMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`2" ref="true" />
      </containers>
      <file name="T_W_EventTemplate_2_EventDelegate" />
    </api>
    <api id="T:W.EventTemplate`3">
      <topicdata group="api" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`3.#ctor" />
        <element api="E:W.EventTemplate`3.OnRaised" />
        <element api="M:W.EventTemplate`3.Raise(System.Object,`0,`1,`2,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_EventTemplate_3" />
    </api>
    <api id="Methods.T:W.EventTemplate`3">
      <topicdata name="EventTemplate" group="list" subgroup="Methods" typeTopicId="T:W.EventTemplate`3" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`3.Raise(System.Object,`0,`1,`2,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`3" />
      </containers>
      <file name="Methods_T_W_EventTemplate_3" />
    </api>
    <api id="Events.T:W.EventTemplate`3">
      <topicdata name="EventTemplate" group="list" subgroup="Events" typeTopicId="T:W.EventTemplate`3" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
      </templates>
      <elements>
        <element api="E:W.EventTemplate`3.OnRaised" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`3" />
      </containers>
      <file name="Events_T_W_EventTemplate_3" />
    </api>
    <api id="M:W.EventTemplate`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`3" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_3__ctor" />
    </api>
    <api id="E:W.EventTemplate`3.OnRaised">
      <topicdata group="api" />
      <apidata name="OnRaised" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRaised" />
      <remover name="remove_OnRaised" />
      <eventhandler>
        <type api="T:W.EventTemplate`3.EventDelegate" ref="true">
          <type api="T:W.EventTemplate`3" ref="true">
            <specialization>
              <template name="TEventArg1" index="0" api="T:W.EventTemplate`3" />
              <template name="TEventArg2" index="1" api="T:W.EventTemplate`3" />
              <template name="TEventArg3" index="2" api="T:W.EventTemplate`3" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`3" ref="true" />
      </containers>
      <file name="E_W_EventTemplate_3_OnRaised" />
    </api>
    <api id="M:W.EventTemplate`3.Raise(System.Object,`0,`1,`2,System.String)">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`3" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`3" />
        </parameter>
        <parameter name="arg3">
          <template name="TEventArg3" index="2" api="T:W.EventTemplate`3" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`3" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_3_Raise" />
    </api>
    <api id="T:W.EventTemplate`3.EventDelegate">
      <topicdata group="api" />
      <apidata name="EventDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`3" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`3" />
        </parameter>
        <parameter name="arg3">
          <template name="TEventArg3" index="2" api="T:W.EventTemplate`3" />
        </parameter>
        <parameter name="callerMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`3" ref="true" />
      </containers>
      <file name="T_W_EventTemplate_3_EventDelegate" />
    </api>
    <api id="T:W.EventTemplate`4">
      <topicdata group="api" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
        <template name="TEventArg4" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`4.#ctor" />
        <element api="E:W.EventTemplate`4.OnRaised" />
        <element api="M:W.EventTemplate`4.Raise(System.Object,`0,`1,`2,`3,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_EventTemplate_4" />
    </api>
    <api id="Methods.T:W.EventTemplate`4">
      <topicdata name="EventTemplate" group="list" subgroup="Methods" typeTopicId="T:W.EventTemplate`4" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
        <template name="TEventArg4" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`4.Raise(System.Object,`0,`1,`2,`3,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`4" />
      </containers>
      <file name="Methods_T_W_EventTemplate_4" />
    </api>
    <api id="Events.T:W.EventTemplate`4">
      <topicdata name="EventTemplate" group="list" subgroup="Events" typeTopicId="T:W.EventTemplate`4" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
        <template name="TEventArg4" />
      </templates>
      <elements>
        <element api="E:W.EventTemplate`4.OnRaised" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`4" />
      </containers>
      <file name="Events_T_W_EventTemplate_4" />
    </api>
    <api id="M:W.EventTemplate`4.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`4" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_4__ctor" />
    </api>
    <api id="E:W.EventTemplate`4.OnRaised">
      <topicdata group="api" />
      <apidata name="OnRaised" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRaised" />
      <remover name="remove_OnRaised" />
      <eventhandler>
        <type api="T:W.EventTemplate`4.EventDelegate" ref="true">
          <type api="T:W.EventTemplate`4" ref="true">
            <specialization>
              <template name="TEventArg1" index="0" api="T:W.EventTemplate`4" />
              <template name="TEventArg2" index="1" api="T:W.EventTemplate`4" />
              <template name="TEventArg3" index="2" api="T:W.EventTemplate`4" />
              <template name="TEventArg4" index="3" api="T:W.EventTemplate`4" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`4" ref="true" />
      </containers>
      <file name="E_W_EventTemplate_4_OnRaised" />
    </api>
    <api id="M:W.EventTemplate`4.Raise(System.Object,`0,`1,`2,`3,System.String)">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="arg3">
          <template name="TEventArg3" index="2" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="arg4">
          <template name="TEventArg4" index="3" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`4" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_4_Raise" />
    </api>
    <api id="T:W.EventTemplate`4.EventDelegate">
      <topicdata group="api" />
      <apidata name="EventDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="arg3">
          <template name="TEventArg3" index="2" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="arg4">
          <template name="TEventArg4" index="3" api="T:W.EventTemplate`4" />
        </parameter>
        <parameter name="callerMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`4" ref="true" />
      </containers>
      <file name="T_W_EventTemplate_4_EventDelegate" />
    </api>
    <api id="T:W.EventTemplate`5">
      <topicdata group="api" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
        <template name="TEventArg4" />
        <template name="TEventArg5" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`5.#ctor" />
        <element api="E:W.EventTemplate`5.OnRaised" />
        <element api="M:W.EventTemplate`5.Raise(System.Object,`0,`1,`2,`3,`4,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_EventTemplate_5" />
    </api>
    <api id="Methods.T:W.EventTemplate`5">
      <topicdata name="EventTemplate" group="list" subgroup="Methods" typeTopicId="T:W.EventTemplate`5" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
        <template name="TEventArg4" />
        <template name="TEventArg5" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.EventTemplate`5.Raise(System.Object,`0,`1,`2,`3,`4,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`5" />
      </containers>
      <file name="Methods_T_W_EventTemplate_5" />
    </api>
    <api id="Events.T:W.EventTemplate`5">
      <topicdata name="EventTemplate" group="list" subgroup="Events" typeTopicId="T:W.EventTemplate`5" />
      <apidata name="EventTemplate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEventArg1" />
        <template name="TEventArg2" />
        <template name="TEventArg3" />
        <template name="TEventArg4" />
        <template name="TEventArg5" />
      </templates>
      <elements>
        <element api="E:W.EventTemplate`5.OnRaised" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`5" />
      </containers>
      <file name="Events_T_W_EventTemplate_5" />
    </api>
    <api id="M:W.EventTemplate`5.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`5" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_5__ctor" />
    </api>
    <api id="E:W.EventTemplate`5.OnRaised">
      <topicdata group="api" />
      <apidata name="OnRaised" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OnRaised" />
      <remover name="remove_OnRaised" />
      <eventhandler>
        <type api="T:W.EventTemplate`5.EventDelegate" ref="true">
          <type api="T:W.EventTemplate`5" ref="true">
            <specialization>
              <template name="TEventArg1" index="0" api="T:W.EventTemplate`5" />
              <template name="TEventArg2" index="1" api="T:W.EventTemplate`5" />
              <template name="TEventArg3" index="2" api="T:W.EventTemplate`5" />
              <template name="TEventArg4" index="3" api="T:W.EventTemplate`5" />
              <template name="TEventArg5" index="4" api="T:W.EventTemplate`5" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`5" ref="true" />
      </containers>
      <file name="E_W_EventTemplate_5_OnRaised" />
    </api>
    <api id="M:W.EventTemplate`5.Raise(System.Object,`0,`1,`2,`3,`4,System.String)">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg3">
          <template name="TEventArg3" index="2" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg4">
          <template name="TEventArg4" index="3" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg5">
          <template name="TEventArg5" index="4" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`5" ref="true" />
      </containers>
      <file name="M_W_EventTemplate_5_Raise" />
    </api>
    <api id="T:W.EventTemplate`5.EventDelegate">
      <topicdata group="api" />
      <apidata name="EventDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arg1">
          <template name="TEventArg1" index="0" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg2">
          <template name="TEventArg2" index="1" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg3">
          <template name="TEventArg3" index="2" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg4">
          <template name="TEventArg4" index="3" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="arg5">
          <template name="TEventArg5" index="4" api="T:W.EventTemplate`5" />
        </parameter>
        <parameter name="callerMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate`5" ref="true" />
      </containers>
      <file name="T_W_EventTemplate_5_EventDelegate" />
    </api>
    <api id="T:W.EventTemplate.EventDelegate">
      <topicdata group="api" />
      <apidata name="EventDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callerMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.EventTemplate" ref="true" />
      </containers>
      <file name="T_W_EventTemplate_EventDelegate" />
    </api>
    <api id="T:W.ExtensionMethods">
      <topicdata group="api" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:W.ExtensionMethods.Lock``1(``0,System.Action{``0})" />
        <element api="M:W.ExtensionMethods.Raise(System.Delegate,System.Object[])" />
        <element api="M:W.ExtensionMethods.WaitForValue``1(``0,System.Predicate{``0},System.Int32)" />
        <element api="Overload:W.ExtensionMethods.WaitForValueAsync">
          <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" />
          <element api="M:W.ExtensionMethods.WaitForValueAsync``1(``0,System.Predicate{``0},System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_ExtensionMethods" />
    </api>
    <api id="Methods.T:W.ExtensionMethods">
      <topicdata name="ExtensionMethods" group="list" subgroup="Methods" typeTopicId="T:W.ExtensionMethods" />
      <apidata name="ExtensionMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:W.ExtensionMethods.Lock``1(``0,System.Action{``0})" />
        <element api="M:W.ExtensionMethods.Raise(System.Delegate,System.Object[])" />
        <element api="M:W.ExtensionMethods.WaitForValue``1(``0,System.Predicate{``0},System.Int32)" />
        <element api="Overload:W.ExtensionMethods.WaitForValueAsync">
          <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" />
          <element api="M:W.ExtensionMethods.WaitForValueAsync``1(``0,System.Predicate{``0},System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" />
      </containers>
      <file name="Methods_T_W_ExtensionMethods" />
    </api>
    <api id="Overload:W.ExtensionMethods.WaitForValueAsync">
      <topicdata name="WaitForValueAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="WaitForValueAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" />
        <element api="M:W.ExtensionMethods.WaitForValueAsync``1(``0,System.Predicate{``0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" ref="true" />
      </containers>
      <file name="Overload_W_ExtensionMethods_WaitForValueAsync" />
    </api>
    <api id="M:W.ExtensionMethods.Lock``1(``0,System.Action{``0})">
      <topicdata group="api" />
      <apidata name="Lock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TItemType" />
      </templates>
      <parameters>
        <parameter name="this">
          <template name="TItemType" index="0" api="M:W.ExtensionMethods.Lock``1(``0,System.Action{``0})" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TItemType" index="0" api="M:W.ExtensionMethods.Lock``1(``0,System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_ExtensionMethods_Lock__1" />
    </api>
    <api id="M:W.ExtensionMethods.Raise(System.Delegate,System.Object[])">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="del">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Exception" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_ExtensionMethods_Raise" />
    </api>
    <api id="M:W.ExtensionMethods.WaitForValue``1(``0,System.Predicate{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitForValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TItemType" />
      </templates>
      <parameters>
        <parameter name="this">
          <template name="TItemType" index="0" api="M:W.ExtensionMethods.WaitForValue``1(``0,System.Predicate{``0},System.Int32)" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <template name="TItemType" index="0" api="M:W.ExtensionMethods.WaitForValue``1(``0,System.Predicate{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="msTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_ExtensionMethods_WaitForValue__1" />
    </api>
    <api id="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitForValueAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.ExtensionMethods.WaitForValueAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="desiredValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="msTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_ExtensionMethods_WaitForValueAsync" />
    </api>
    <api id="M:W.ExtensionMethods.WaitForValueAsync``1(``0,System.Predicate{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitForValueAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.ExtensionMethods.WaitForValueAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TItemType" />
      </templates>
      <parameters>
        <parameter name="this">
          <template name="TItemType" index="0" api="M:W.ExtensionMethods.WaitForValueAsync``1(``0,System.Predicate{``0},System.Int32)" />
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <template name="TItemType" index="0" api="M:W.ExtensionMethods.WaitForValueAsync``1(``0,System.Predicate{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="msTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.ExtensionMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_ExtensionMethods_WaitForValueAsync__1" />
    </api>
    <api id="T:W.FromExtensions">
      <topicdata group="api" />
      <apidata name="FromExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:W.FromExtensions.FromBase64">
          <element api="M:W.FromExtensions.FromBase64(System.Byte[])" />
          <element api="M:W.FromExtensions.FromBase64(System.String)" />
        </element>
        <element api="M:W.FromExtensions.FromCompressed(System.Byte[])" />
        <element api="Overload:W.FromExtensions.FromJson">
          <element api="M:W.FromExtensions.FromJson``1(System.Byte[])" />
          <element api="M:W.FromExtensions.FromJson``1(System.String)" />
        </element>
        <element api="Overload:W.FromExtensions.FromXml">
          <element api="M:W.FromExtensions.FromXml``1(System.Byte[])" />
          <element api="M:W.FromExtensions.FromXml``1(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_FromExtensions" />
    </api>
    <api id="Methods.T:W.FromExtensions">
      <topicdata name="FromExtensions" group="list" subgroup="Methods" typeTopicId="T:W.FromExtensions" />
      <apidata name="FromExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:W.FromExtensions.FromBase64">
          <element api="M:W.FromExtensions.FromBase64(System.Byte[])" />
          <element api="M:W.FromExtensions.FromBase64(System.String)" />
        </element>
        <element api="M:W.FromExtensions.FromCompressed(System.Byte[])" />
        <element api="Overload:W.FromExtensions.FromJson">
          <element api="M:W.FromExtensions.FromJson``1(System.Byte[])" />
          <element api="M:W.FromExtensions.FromJson``1(System.String)" />
        </element>
        <element api="Overload:W.FromExtensions.FromXml">
          <element api="M:W.FromExtensions.FromXml``1(System.Byte[])" />
          <element api="M:W.FromExtensions.FromXml``1(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" />
      </containers>
      <file name="Methods_T_W_FromExtensions" />
    </api>
    <api id="Overload:W.FromExtensions.FromBase64">
      <topicdata name="FromBase64" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FromBase64" group="member" subgroup="method" />
      <elements>
        <element api="M:W.FromExtensions.FromBase64(System.Byte[])" />
        <element api="M:W.FromExtensions.FromBase64(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <file name="Overload_W_FromExtensions_FromBase64" />
    </api>
    <api id="Overload:W.FromExtensions.FromJson">
      <topicdata name="FromJson" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FromJson" group="member" subgroup="method" />
      <elements>
        <element api="M:W.FromExtensions.FromJson``1(System.Byte[])" />
        <element api="M:W.FromExtensions.FromJson``1(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <file name="Overload_W_FromExtensions_FromJson" />
    </api>
    <api id="Overload:W.FromExtensions.FromXml">
      <topicdata name="FromXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <elements>
        <element api="M:W.FromExtensions.FromXml``1(System.Byte[])" />
        <element api="M:W.FromExtensions.FromXml``1(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <file name="Overload_W_FromExtensions_FromXml" />
    </api>
    <api id="M:W.FromExtensions.FromBase64(System.Byte[])">
      <topicdata group="api" />
      <apidata name="FromBase64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.FromExtensions.FromBase64" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromBase64" />
    </api>
    <api id="M:W.FromExtensions.FromBase64(System.String)">
      <topicdata group="api" />
      <apidata name="FromBase64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.FromExtensions.FromBase64" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromBase64_1" />
    </api>
    <api id="M:W.FromExtensions.FromCompressed(System.Byte[])">
      <topicdata group="api" />
      <apidata name="FromCompressed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromCompressed" />
    </api>
    <api id="M:W.FromExtensions.FromJson``1(System.Byte[])">
      <topicdata group="api" />
      <apidata name="FromJson" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.FromExtensions.FromJson" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="TType" index="0" api="M:W.FromExtensions.FromJson``1(System.Byte[])" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromJson__1" />
    </api>
    <api id="M:W.FromExtensions.FromJson``1(System.String)">
      <topicdata group="api" />
      <apidata name="FromJson" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.FromExtensions.FromJson" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TType" index="0" api="M:W.FromExtensions.FromJson``1(System.String)" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromJson__1_1" />
    </api>
    <api id="M:W.FromExtensions.FromXml``1(System.Byte[])">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.FromExtensions.FromXml" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="this">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <template name="TType" index="0" api="M:W.FromExtensions.FromXml``1(System.Byte[])" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromXml__1" />
    </api>
    <api id="M:W.FromExtensions.FromXml``1(System.String)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.FromExtensions.FromXml" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TType" />
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TType" index="0" api="M:W.FromExtensions.FromXml``1(System.String)" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.FromExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_FromExtensions_FromXml__1_1" />
    </api>
    <api id="T:W.InvokeExtensions">
      <topicdata group="api" />
      <apidata name="InvokeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:W.InvokeExtensions.InvokeEx">
          <element api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" />
          <element api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" />
          <element api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_InvokeExtensions" />
    </api>
    <api id="Methods.T:W.InvokeExtensions">
      <topicdata name="InvokeExtensions" group="list" subgroup="Methods" typeTopicId="T:W.InvokeExtensions" />
      <apidata name="InvokeExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:W.InvokeExtensions.InvokeEx">
          <element api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" />
          <element api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" />
          <element api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.InvokeExtensions" />
      </containers>
      <file name="Methods_T_W_InvokeExtensions" />
    </api>
    <api id="Overload:W.InvokeExtensions.InvokeEx">
      <topicdata name="InvokeEx" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="InvokeEx" group="member" subgroup="method" />
      <elements>
        <element api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" />
        <element api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" />
        <element api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.InvokeExtensions" ref="true" />
      </containers>
      <file name="Overload_W_InvokeExtensions_InvokeEx" />
    </api>
    <api id="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})">
      <topicdata group="api" />
      <apidata name="InvokeEx" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.InvokeExtensions.InvokeEx" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="this">
          <template name="T" index="0" api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.InvokeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_InvokeExtensions_InvokeEx__1" />
    </api>
    <api id="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})">
      <topicdata group="api" />
      <apidata name="InvokeEx" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.InvokeExtensions.InvokeEx" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="this">
          <template name="T" index="0" api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" />
        </parameter>
        <parameter name="f">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:W.InvokeExtensions.InvokeEx``1(``0,System.Func{``0,System.Object})" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.InvokeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_InvokeExtensions_InvokeEx__1_1" />
    </api>
    <api id="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="InvokeEx" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.InvokeExtensions.InvokeEx" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="U" />
      </templates>
      <parameters>
        <parameter name="this">
          <template name="T" index="0" api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
        </parameter>
        <parameter name="f">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
              <template name="U" index="1" api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="U" index="1" api="M:W.InvokeExtensions.InvokeEx``2(``0,System.Func{``0,``1})" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.InvokeExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_InvokeExtensions_InvokeEx__2" />
    </api>
    <api id="T:W.IOwnedProperty">
      <topicdata group="api" />
      <apidata name="IOwnedProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:W.Property`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:W.IOwnedProperty.SetOwner(System.Object)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_IOwnedProperty" />
    </api>
    <api id="Methods.T:W.IOwnedProperty">
      <topicdata name="IOwnedProperty" group="list" subgroup="Methods" typeTopicId="T:W.IOwnedProperty" />
      <apidata name="IOwnedProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:W.IOwnedProperty.SetOwner(System.Object)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.IOwnedProperty" />
      </containers>
      <file name="Methods_T_W_IOwnedProperty" />
    </api>
    <api id="M:W.IOwnedProperty.SetOwner(System.Object)">
      <topicdata group="api" />
      <apidata name="SetOwner" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.IOwnedProperty" ref="true" />
      </containers>
      <file name="M_W_IOwnedProperty_SetOwner" />
    </api>
    <api id="T:W.IProperty">
      <topicdata group="api" />
      <apidata name="IProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:W.IProperty`1" ref="true" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </implementors>
      <elements>
        <element api="P:W.IProperty.IsDirty" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_IProperty" />
    </api>
    <api id="Properties.T:W.IProperty">
      <topicdata name="IProperty" group="list" subgroup="Properties" typeTopicId="T:W.IProperty" />
      <apidata name="IProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:W.IProperty.IsDirty" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.IProperty" />
      </containers>
      <file name="Properties_T_W_IProperty" />
    </api>
    <api id="P:W.IProperty.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDirty" />
      <setter name="set_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.IProperty" ref="true" />
      </containers>
      <file name="P_W_IProperty_IsDirty" />
    </api>
    <api id="T:W.IProperty`1">
      <topicdata group="api" />
      <apidata name="IProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:W.IProperty" ref="true" />
      </implements>
      <implementors>
        <type api="T:W.PropertyBase`2" ref="true" />
      </implementors>
      <elements>
        <element api="P:W.IProperty.IsDirty" />
        <element api="P:W.IProperty`1.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_IProperty_1" />
    </api>
    <api id="Properties.T:W.IProperty`1">
      <topicdata name="IProperty" group="list" subgroup="Properties" typeTopicId="T:W.IProperty`1" />
      <apidata name="IProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:W.IProperty.IsDirty" />
        <element api="P:W.IProperty`1.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.IProperty`1" />
      </containers>
      <file name="Properties_T_W_IProperty_1" />
    </api>
    <api id="P:W.IProperty`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="TValue" index="0" api="T:W.IProperty`1" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.IProperty`1" ref="true" />
      </containers>
      <file name="P_W_IProperty_1_Value" />
    </api>
    <api id="T:W.Lockable`1">
      <topicdata group="api" />
      <apidata name="Lockable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Lockable`1.#ctor">
          <element api="M:W.Lockable`1.#ctor" />
          <element api="M:W.Lockable`1.#ctor(`0)" />
        </element>
        <element api="Overload:W.Lockable`1.ExecuteInLock">
          <element api="M:W.Lockable`1.ExecuteInLock(System.Action{`0})" />
          <element api="M:W.Lockable`1.ExecuteInLock(System.Func{`0,`0})" />
        </element>
        <element api="Overload:W.Lockable`1.ExecuteInLockAsync">
          <element api="M:W.Lockable`1.ExecuteInLockAsync(System.Action{`0})" />
          <element api="M:W.Lockable`1.ExecuteInLockAsync(System.Func{`0,`0})" />
        </element>
        <element api="P:W.Lockable`1.LockObject" />
        <element api="P:W.Lockable`1.UnlockedValue" />
        <element api="P:W.Lockable`1.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_Lockable_1" />
    </api>
    <api id="Methods.T:W.Lockable`1">
      <topicdata name="Lockable" group="list" subgroup="Methods" typeTopicId="T:W.Lockable`1" />
      <apidata name="Lockable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Lockable`1.ExecuteInLock">
          <element api="M:W.Lockable`1.ExecuteInLock(System.Action{`0})" />
          <element api="M:W.Lockable`1.ExecuteInLock(System.Func{`0,`0})" />
        </element>
        <element api="Overload:W.Lockable`1.ExecuteInLockAsync">
          <element api="M:W.Lockable`1.ExecuteInLockAsync(System.Action{`0})" />
          <element api="M:W.Lockable`1.ExecuteInLockAsync(System.Func{`0,`0})" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" />
      </containers>
      <file name="Methods_T_W_Lockable_1" />
    </api>
    <api id="Properties.T:W.Lockable`1">
      <topicdata name="Lockable" group="list" subgroup="Properties" typeTopicId="T:W.Lockable`1" />
      <apidata name="Lockable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:W.Lockable`1.LockObject" />
        <element api="P:W.Lockable`1.UnlockedValue" />
        <element api="P:W.Lockable`1.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" />
      </containers>
      <file name="Properties_T_W_Lockable_1" />
    </api>
    <api id="Overload:W.Lockable`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.Lockable`1.#ctor" />
        <element api="M:W.Lockable`1.#ctor(`0)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="Overload_W_Lockable_1__ctor" />
    </api>
    <api id="Overload:W.Lockable`1.ExecuteInLock">
      <topicdata name="ExecuteInLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteInLock" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Lockable`1.ExecuteInLock(System.Action{`0})" />
        <element api="M:W.Lockable`1.ExecuteInLock(System.Func{`0,`0})" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="Overload_W_Lockable_1_ExecuteInLock" />
    </api>
    <api id="Overload:W.Lockable`1.ExecuteInLockAsync">
      <topicdata name="ExecuteInLockAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="ExecuteInLockAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Lockable`1.ExecuteInLockAsync(System.Action{`0})" />
        <element api="M:W.Lockable`1.ExecuteInLockAsync(System.Func{`0,`0})" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="Overload_W_Lockable_1_ExecuteInLockAsync" />
    </api>
    <api id="M:W.Lockable`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Lockable`1.#ctor" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="M_W_Lockable_1__ctor" />
    </api>
    <api id="M:W.Lockable`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Lockable`1.#ctor" />
      <parameters>
        <parameter name="value">
          <template name="TValue" index="0" api="T:W.Lockable`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="M_W_Lockable_1__ctor_1" />
    </api>
    <api id="M:W.Lockable`1.ExecuteInLock(System.Action{`0})">
      <topicdata group="api" />
      <apidata name="ExecuteInLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Lockable`1.ExecuteInLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:W.Lockable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="M_W_Lockable_1_ExecuteInLock" />
    </api>
    <api id="M:W.Lockable`1.ExecuteInLock(System.Func{`0,`0})">
      <topicdata group="api" />
      <apidata name="ExecuteInLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Lockable`1.ExecuteInLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:W.Lockable`1" />
              <template name="TValue" index="0" api="T:W.Lockable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="M_W_Lockable_1_ExecuteInLock_1" />
    </api>
    <api id="M:W.Lockable`1.ExecuteInLockAsync(System.Action{`0})">
      <topicdata group="api" />
      <apidata name="ExecuteInLockAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Lockable`1.ExecuteInLockAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:W.Lockable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="M_W_Lockable_1_ExecuteInLockAsync" />
    </api>
    <api id="M:W.Lockable`1.ExecuteInLockAsync(System.Func{`0,`0})">
      <topicdata group="api" />
      <apidata name="ExecuteInLockAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Lockable`1.ExecuteInLockAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:W.Lockable`1" />
              <template name="TValue" index="0" api="T:W.Lockable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="M_W_Lockable_1_ExecuteInLockAsync_1" />
    </api>
    <api id="P:W.Lockable`1.LockObject">
      <topicdata group="api" />
      <apidata name="LockObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LockObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="P_W_Lockable_1_LockObject" />
    </api>
    <api id="P:W.Lockable`1.UnlockedValue">
      <topicdata group="api" />
      <apidata name="UnlockedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnlockedValue" />
      <setter name="set_UnlockedValue" />
      <returns>
        <template name="TValue" index="0" api="T:W.Lockable`1" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="P_W_Lockable_1_UnlockedValue" />
    </api>
    <api id="P:W.Lockable`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="TValue" index="0" api="T:W.Lockable`1" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Lockable`1" ref="true" />
      </containers>
      <file name="P_W_Lockable_1_Value" />
    </api>
    <api id="T:W.Property`1">
      <topicdata group="api" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.PropertyBase`2" ref="true">
            <specialization>
              <type api="T:W.Property`1" ref="true">
                <specialization>
                  <template name="TValue" index="0" api="T:W.Property`1" />
                </specialization>
              </type>
              <template name="TValue" index="0" api="T:W.Property`1" />
            </specialization>
          </type>
          <type api="T:W.PropertyChangedNotifier" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Property`1.#ctor">
          <element api="M:W.Property`1.#ctor" />
          <element api="M:W.Property`1.#ctor(`0)" />
          <element api="M:W.Property`1.#ctor(W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" />
          <element api="M:W.Property`1.#ctor(`0,W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" />
        </element>
        <element api="P:W.PropertyBase`2.DefaultValue" />
        <element api="M:W.PropertyBase`2.Dispose" />
        <element api="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.Finalize" />
        <element api="M:W.PropertyBase`2.GetValue" />
        <element api="P:W.PropertyBase`2.IsDirty" />
        <element api="M:W.PropertyBase`2.LoadValue(`1)" />
        <element api="M:W.PropertyBase`2.OnPropertyChanged(System.String)" />
        <element api="F:W.PropertyBase`2.OnValueChanged" />
        <element api="P:W.PropertyBase`2.Owner" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" />
        <element api="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" />
        <element api="M:W.PropertyBase`2.SetValue(System.Object,System.String)" />
        <element api="P:W.PropertyBase`2.Value" />
        <element api="E:W.PropertyBase`2.ValueChanged" />
        <element api="E:W.PropertyBase`2.ValueChanging" />
        <element api="M:W.PropertyBase`2.WaitForChanged(System.Int32)" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_Property_1" />
    </api>
    <api id="Methods.T:W.Property`1">
      <topicdata name="Property" group="list" subgroup="Methods" typeTopicId="T:W.Property`1" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyBase`2.Dispose" />
        <element api="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.Finalize" />
        <element api="M:W.PropertyBase`2.GetValue" />
        <element api="M:W.PropertyBase`2.LoadValue(`1)" />
        <element api="M:W.PropertyBase`2.OnPropertyChanged(System.String)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" />
        <element api="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" />
        <element api="M:W.PropertyBase`2.SetValue(System.Object,System.String)" />
        <element api="M:W.PropertyBase`2.WaitForChanged(System.Int32)" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" />
      </containers>
      <file name="Methods_T_W_Property_1" />
    </api>
    <api id="Properties.T:W.Property`1">
      <topicdata name="Property" group="list" subgroup="Properties" typeTopicId="T:W.Property`1" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:W.PropertyBase`2.DefaultValue" />
        <element api="P:W.PropertyBase`2.IsDirty" />
        <element api="P:W.PropertyBase`2.Owner" />
        <element api="P:W.PropertyBase`2.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" />
      </containers>
      <file name="Properties_T_W_Property_1" />
    </api>
    <api id="Events.T:W.Property`1">
      <topicdata name="Property" group="list" subgroup="Events" typeTopicId="T:W.Property`1" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="E:W.PropertyBase`2.ValueChanged" />
        <element api="E:W.PropertyBase`2.ValueChanging" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" />
      </containers>
      <file name="Events_T_W_Property_1" />
    </api>
    <api id="Fields.T:W.Property`1">
      <topicdata name="Property" group="list" subgroup="Fields" typeTopicId="T:W.Property`1" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="F:W.PropertyBase`2.OnValueChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" />
      </containers>
      <file name="Fields_T_W_Property_1" />
    </api>
    <api id="Overload:W.Property`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.Property`1.#ctor" />
        <element api="M:W.Property`1.#ctor(`0)" />
        <element api="M:W.Property`1.#ctor(W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" />
        <element api="M:W.Property`1.#ctor(`0,W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" ref="true" />
      </containers>
      <file name="Overload_W_Property_1__ctor" />
    </api>
    <api id="M:W.Property`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`1.#ctor" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" ref="true" />
      </containers>
      <file name="M_W_Property_1__ctor" />
    </api>
    <api id="M:W.Property`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`1.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <template name="TValue" index="0" api="T:W.Property`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" ref="true" />
      </containers>
      <file name="M_W_Property_1__ctor_1" />
    </api>
    <api id="M:W.Property`1.#ctor(`0,W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`1.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <template name="TValue" index="0" api="T:W.Property`1" />
        </parameter>
        <parameter name="onValueChanged">
          <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
            <type api="T:W.PropertyBase`2" ref="true">
              <specialization>
                <type api="T:W.Property`1" ref="true">
                  <specialization>
                    <template name="TValue" index="0" api="T:W.Property`1" />
                  </specialization>
                </type>
                <template name="TValue" index="0" api="T:W.Property`1" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" ref="true" />
      </containers>
      <file name="M_W_Property_1__ctor_2" />
    </api>
    <api id="M:W.Property`1.#ctor(W.PropertyBase{W.Property{`0},`0}.OnValueChangedDelegate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`1.#ctor" />
      <parameters>
        <parameter name="onValueChanged">
          <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
            <type api="T:W.PropertyBase`2" ref="true">
              <specialization>
                <type api="T:W.Property`1" ref="true">
                  <specialization>
                    <template name="TValue" index="0" api="T:W.Property`1" />
                  </specialization>
                </type>
                <template name="TValue" index="0" api="T:W.Property`1" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`1" ref="true" />
      </containers>
      <file name="M_W_Property_1__ctor_3" />
    </api>
    <api id="T:W.Property`2">
      <topicdata group="api" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.PropertyBase`2" ref="true">
            <specialization>
              <template name="TOwner" index="0" api="T:W.Property`2" />
              <template name="TValue" index="1" api="T:W.Property`2" />
            </specialization>
          </type>
          <type api="T:W.PropertyChangedNotifier" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:W.IOwnedProperty" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Property`2.#ctor">
          <element api="M:W.Property`2.#ctor" />
          <element api="M:W.Property`2.#ctor(`0)" />
          <element api="M:W.Property`2.#ctor(`1)" />
          <element api="M:W.Property`2.#ctor(W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
          <element api="M:W.Property`2.#ctor(`0,`1)" />
          <element api="M:W.Property`2.#ctor(`0,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
          <element api="M:W.Property`2.#ctor(`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
          <element api="M:W.Property`2.#ctor(`0,`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
        </element>
        <element api="P:W.PropertyBase`2.DefaultValue" />
        <element api="M:W.PropertyBase`2.Dispose" />
        <element api="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.Finalize" />
        <element api="M:W.PropertyBase`2.GetValue" />
        <element api="P:W.PropertyBase`2.IsDirty" />
        <element api="M:W.PropertyBase`2.LoadValue(`1)" />
        <element api="M:W.PropertyBase`2.OnPropertyChanged(System.String)" />
        <element api="F:W.PropertyBase`2.OnValueChanged" />
        <element api="P:W.PropertyBase`2.Owner" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" />
        <element api="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" />
        <element api="M:W.PropertyBase`2.SetValue(System.Object,System.String)" />
        <element api="P:W.PropertyBase`2.Value" />
        <element api="E:W.PropertyBase`2.ValueChanged" />
        <element api="E:W.PropertyBase`2.ValueChanging" />
        <element api="M:W.PropertyBase`2.WaitForChanged(System.Int32)" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_Property_2" />
    </api>
    <api id="Methods.T:W.Property`2">
      <topicdata name="Property" group="list" subgroup="Methods" typeTopicId="T:W.Property`2" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyBase`2.Dispose" />
        <element api="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.Finalize" />
        <element api="M:W.PropertyBase`2.GetValue" />
        <element api="M:W.PropertyBase`2.LoadValue(`1)" />
        <element api="M:W.PropertyBase`2.OnPropertyChanged(System.String)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" />
        <element api="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" />
        <element api="M:W.PropertyBase`2.SetValue(System.Object,System.String)" />
        <element api="M:W.PropertyBase`2.WaitForChanged(System.Int32)" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" />
      </containers>
      <file name="Methods_T_W_Property_2" />
    </api>
    <api id="Properties.T:W.Property`2">
      <topicdata name="Property" group="list" subgroup="Properties" typeTopicId="T:W.Property`2" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:W.PropertyBase`2.DefaultValue" />
        <element api="P:W.PropertyBase`2.IsDirty" />
        <element api="P:W.PropertyBase`2.Owner" />
        <element api="P:W.PropertyBase`2.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" />
      </containers>
      <file name="Properties_T_W_Property_2" />
    </api>
    <api id="Events.T:W.Property`2">
      <topicdata name="Property" group="list" subgroup="Events" typeTopicId="T:W.Property`2" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="E:W.PropertyBase`2.ValueChanged" />
        <element api="E:W.PropertyBase`2.ValueChanging" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" />
      </containers>
      <file name="Events_T_W_Property_2" />
    </api>
    <api id="Fields.T:W.Property`2">
      <topicdata name="Property" group="list" subgroup="Fields" typeTopicId="T:W.Property`2" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="F:W.PropertyBase`2.OnValueChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" />
      </containers>
      <file name="Fields_T_W_Property_2" />
    </api>
    <api id="Overload:W.Property`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.Property`2.#ctor" />
        <element api="M:W.Property`2.#ctor(`0)" />
        <element api="M:W.Property`2.#ctor(`1)" />
        <element api="M:W.Property`2.#ctor(W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
        <element api="M:W.Property`2.#ctor(`0,`1)" />
        <element api="M:W.Property`2.#ctor(`0,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
        <element api="M:W.Property`2.#ctor(`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
        <element api="M:W.Property`2.#ctor(`0,`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="Overload_W_Property_2__ctor" />
    </api>
    <api id="M:W.Property`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor" />
    </api>
    <api id="M:W.Property`2.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="owner">
          <template name="TOwner" index="0" api="T:W.Property`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_1" />
    </api>
    <api id="M:W.Property`2.#ctor(`0,`1)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="owner">
          <template name="TOwner" index="0" api="T:W.Property`2" />
        </parameter>
        <parameter name="defaultValue">
          <template name="TValue" index="1" api="T:W.Property`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_2" />
    </api>
    <api id="M:W.Property`2.#ctor(`0,`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="owner">
          <template name="TOwner" index="0" api="T:W.Property`2" />
        </parameter>
        <parameter name="defaultValue">
          <template name="TValue" index="1" api="T:W.Property`2" />
        </parameter>
        <parameter name="onValueChanged">
          <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
            <type api="T:W.PropertyBase`2" ref="true">
              <specialization>
                <template name="TOwner" index="0" api="T:W.Property`2" />
                <template name="TValue" index="1" api="T:W.Property`2" />
              </specialization>
            </type>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_3" />
    </api>
    <api id="M:W.Property`2.#ctor(`0,W.PropertyBase{`0,`1}.OnValueChangedDelegate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="owner">
          <template name="TOwner" index="0" api="T:W.Property`2" />
        </parameter>
        <parameter name="onValueChanged" optional="true">
          <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
            <type api="T:W.PropertyBase`2" ref="true">
              <specialization>
                <template name="TOwner" index="0" api="T:W.Property`2" />
                <template name="TValue" index="1" api="T:W.Property`2" />
              </specialization>
            </type>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_4" />
    </api>
    <api id="M:W.Property`2.#ctor(`1)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <template name="TValue" index="1" api="T:W.Property`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_5" />
    </api>
    <api id="M:W.Property`2.#ctor(`1,W.PropertyBase{`0,`1}.OnValueChangedDelegate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <template name="TValue" index="1" api="T:W.Property`2" />
        </parameter>
        <parameter name="onValueChanged" optional="true">
          <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
            <type api="T:W.PropertyBase`2" ref="true">
              <specialization>
                <template name="TOwner" index="0" api="T:W.Property`2" />
                <template name="TValue" index="1" api="T:W.Property`2" />
              </specialization>
            </type>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_6" />
    </api>
    <api id="M:W.Property`2.#ctor(W.PropertyBase{`0,`1}.OnValueChangedDelegate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Property`2.#ctor" />
      <parameters>
        <parameter name="onValueChanged" optional="true">
          <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
            <type api="T:W.PropertyBase`2" ref="true">
              <specialization>
                <template name="TOwner" index="0" api="T:W.Property`2" />
                <template name="TValue" index="1" api="T:W.Property`2" />
              </specialization>
            </type>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Property`2" ref="true" />
      </containers>
      <file name="M_W_Property_2__ctor_7" />
    </api>
    <api id="T:W.PropertyBase`2">
      <topicdata group="api" />
      <apidata name="PropertyBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.PropertyChangedNotifier" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:W.Property`2" ref="true" />
          <type api="T:W.Property`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:W.IProperty`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:W.PropertyBase`2" />
          </specialization>
        </type>
        <type api="T:W.IProperty" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyBase`2.#ctor" />
        <element api="P:W.PropertyBase`2.DefaultValue" />
        <element api="M:W.PropertyBase`2.Dispose" />
        <element api="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.Finalize" />
        <element api="M:W.PropertyBase`2.GetValue" />
        <element api="P:W.PropertyBase`2.IsDirty" />
        <element api="M:W.PropertyBase`2.LoadValue(`1)" />
        <element api="M:W.PropertyBase`2.OnPropertyChanged(System.String)" />
        <element api="F:W.PropertyBase`2.OnValueChanged" />
        <element api="P:W.PropertyBase`2.Owner" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" />
        <element api="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" />
        <element api="M:W.PropertyBase`2.SetValue(System.Object,System.String)" />
        <element api="P:W.PropertyBase`2.Value" />
        <element api="E:W.PropertyBase`2.ValueChanged" />
        <element api="E:W.PropertyBase`2.ValueChanging" />
        <element api="M:W.PropertyBase`2.WaitForChanged(System.Int32)" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_PropertyBase_2" />
    </api>
    <api id="Methods.T:W.PropertyBase`2">
      <topicdata name="PropertyBase" group="list" subgroup="Methods" typeTopicId="T:W.PropertyBase`2" />
      <apidata name="PropertyBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyBase`2.Dispose" />
        <element api="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.Finalize" />
        <element api="M:W.PropertyBase`2.GetValue" />
        <element api="M:W.PropertyBase`2.LoadValue(`1)" />
        <element api="M:W.PropertyBase`2.OnPropertyChanged(System.String)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)" />
        <element api="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)" />
        <element api="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)" />
        <element api="M:W.PropertyBase`2.SetValue(System.Object,System.String)" />
        <element api="M:W.PropertyBase`2.WaitForChanged(System.Int32)" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" />
      </containers>
      <file name="Methods_T_W_PropertyBase_2" />
    </api>
    <api id="Properties.T:W.PropertyBase`2">
      <topicdata name="PropertyBase" group="list" subgroup="Properties" typeTopicId="T:W.PropertyBase`2" />
      <apidata name="PropertyBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:W.PropertyBase`2.DefaultValue" />
        <element api="P:W.PropertyBase`2.IsDirty" />
        <element api="P:W.PropertyBase`2.Owner" />
        <element api="P:W.PropertyBase`2.Value" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" />
      </containers>
      <file name="Properties_T_W_PropertyBase_2" />
    </api>
    <api id="Events.T:W.PropertyBase`2">
      <topicdata name="PropertyBase" group="list" subgroup="Events" typeTopicId="T:W.PropertyBase`2" />
      <apidata name="PropertyBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="E:W.PropertyBase`2.ValueChanged" />
        <element api="E:W.PropertyBase`2.ValueChanging" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" />
      </containers>
      <file name="Events_T_W_PropertyBase_2" />
    </api>
    <api id="Fields.T:W.PropertyBase`2">
      <topicdata name="PropertyBase" group="list" subgroup="Fields" typeTopicId="T:W.PropertyBase`2" />
      <apidata name="PropertyBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TOwner">
          <constrained ref="true" />
        </template>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="F:W.PropertyBase`2.OnValueChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" />
      </containers>
      <file name="Fields_T_W_PropertyBase_2" />
    </api>
    <api id="M:W.PropertyBase`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2__ctor" />
    </api>
    <api id="P:W.PropertyBase`2.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultValue" />
      <setter name="set_DefaultValue" />
      <returns>
        <template name="TValue" index="1" api="T:W.PropertyBase`2" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="P_W_PropertyBase_2_DefaultValue" />
    </api>
    <api id="M:W.PropertyBase`2.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_Dispose" />
    </api>
    <api id="M:W.PropertyBase`2.ExecuteOnValueChanged(`1,`1)">
      <topicdata group="api" />
      <apidata name="ExecuteOnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oldValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="newValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_ExecuteOnValueChanged" />
    </api>
    <api id="M:W.PropertyBase`2.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_Finalize" />
    </api>
    <api id="M:W.PropertyBase`2.GetValue">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.PropertyChangedNotifier.GetValue">
          <type api="T:W.PropertyChangedNotifier" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_GetValue" />
    </api>
    <api id="P:W.PropertyBase`2.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDirty" />
      <setter name="set_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:W.IProperty.IsDirty">
          <type api="T:W.IProperty" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="P_W_PropertyBase_2_IsDirty" />
    </api>
    <api id="M:W.PropertyBase`2.LoadValue(`1)">
      <topicdata group="api" />
      <apidata name="LoadValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_LoadValue" />
    </api>
    <api id="M:W.PropertyBase`2.OnPropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)">
          <type api="T:W.PropertyChangedNotifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="propertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_OnPropertyChanged" />
    </api>
    <api id="F:W.PropertyBase`2.OnValueChanged">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.PropertyBase`2.OnValueChangedDelegate" ref="true">
          <type api="T:W.PropertyBase`2" ref="true">
            <specialization>
              <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
              <template name="TValue" index="1" api="T:W.PropertyBase`2" />
            </specialization>
          </type>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="F_W_PropertyBase_2_OnValueChanged" />
    </api>
    <api id="P:W.PropertyBase`2.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Owner" />
      <setter name="set_Owner" />
      <returns>
        <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="P_W_PropertyBase_2_Owner" />
    </api>
    <api id="M:W.PropertyBase`2.RaisePropertyValueChanged(`1,`1)">
      <topicdata group="api" />
      <apidata name="RaisePropertyValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oldValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="newValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_RaisePropertyValueChanged" />
    </api>
    <api id="M:W.PropertyBase`2.RaisePropertyValueChanging(`1,`1,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="RaisePropertyValueChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oldValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="newValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="cancel">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_RaisePropertyValueChanging" />
    </api>
    <api id="M:W.PropertyBase`2.ResetToDefaultValue(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ResetToDefaultValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="raise">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_ResetToDefaultValue" />
    </api>
    <api id="M:W.PropertyBase`2.SetValue(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)">
          <type api="T:W.PropertyChangedNotifier" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_SetValue" />
    </api>
    <api id="P:W.PropertyBase`2.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="TValue" index="1" api="T:W.PropertyBase`2" />
      </returns>
      <implements>
        <member api="P:W.IProperty`1.Value">
          <type api="T:W.IProperty`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:W.PropertyBase`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="P_W_PropertyBase_2_Value" />
    </api>
    <api id="E:W.PropertyBase`2.ValueChanged">
      <topicdata group="api" />
      <apidata name="ValueChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ValueChanged" />
      <remover name="remove_ValueChanged" />
      <eventhandler>
        <type api="T:W.PropertyBase`2.PropertyValueChangedDelegate" ref="true">
          <type api="T:W.PropertyBase`2" ref="true">
            <specialization>
              <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
              <template name="TValue" index="1" api="T:W.PropertyBase`2" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="E_W_PropertyBase_2_ValueChanged" />
    </api>
    <api id="E:W.PropertyBase`2.ValueChanging">
      <topicdata group="api" />
      <apidata name="ValueChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ValueChanging" />
      <remover name="remove_ValueChanging" />
      <eventhandler>
        <type api="T:W.PropertyBase`2.PropertyValueChangingDelegate" ref="true">
          <type api="T:W.PropertyBase`2" ref="true">
            <specialization>
              <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
              <template name="TValue" index="1" api="T:W.PropertyBase`2" />
            </specialization>
          </type>
        </type>
      </eventhandler>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="E_W_PropertyBase_2_ValueChanging" />
    </api>
    <api id="M:W.PropertyBase`2.WaitForChanged(System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitForChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msTimeout" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="M_W_PropertyBase_2_WaitForChanged" />
    </api>
    <api id="T:W.PropertyBase`2.OnValueChangedDelegate">
      <topicdata group="api" />
      <apidata name="OnValueChangedDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="owner">
          <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="oldValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="newValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="T_W_PropertyBase_2_OnValueChangedDelegate" />
    </api>
    <api id="T:W.PropertyBase`2.PropertyValueChangedDelegate">
      <topicdata group="api" />
      <apidata name="PropertyValueChangedDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="oldValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="newValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="T_W_PropertyBase_2_PropertyValueChangedDelegate" />
    </api>
    <api id="T:W.PropertyBase`2.PropertyValueChangingDelegate">
      <topicdata group="api" />
      <apidata name="PropertyValueChangingDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="owner">
          <template name="TOwner" index="0" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="oldValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="newValue">
          <template name="TValue" index="1" api="T:W.PropertyBase`2" />
        </parameter>
        <parameter name="cancel">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyBase`2" ref="true" />
      </containers>
      <file name="T_W_PropertyBase_2_PropertyValueChangingDelegate" />
    </api>
    <api id="T:W.PropertyChangedNotifier">
      <topicdata group="api" />
      <apidata name="PropertyChangedNotifier" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:W.PropertyBase`2" ref="true" />
          <type api="T:W.PropertyHostNotifier" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyChangedNotifier.#ctor" />
        <element api="M:W.PropertyChangedNotifier.GetValue" />
        <element api="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
        <element api="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_PropertyChangedNotifier" />
    </api>
    <api id="Methods.T:W.PropertyChangedNotifier">
      <topicdata name="PropertyChangedNotifier" group="list" subgroup="Methods" typeTopicId="T:W.PropertyChangedNotifier" />
      <apidata name="PropertyChangedNotifier" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyChangedNotifier.GetValue" />
        <element api="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
        <element api="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" />
      </containers>
      <file name="Methods_T_W_PropertyChangedNotifier" />
    </api>
    <api id="Events.T:W.PropertyChangedNotifier">
      <topicdata name="PropertyChangedNotifier" group="list" subgroup="Events" typeTopicId="T:W.PropertyChangedNotifier" />
      <apidata name="PropertyChangedNotifier" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" />
      </containers>
      <file name="Events_T_W_PropertyChangedNotifier" />
    </api>
    <api id="M:W.PropertyChangedNotifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyChangedNotifier__ctor" />
    </api>
    <api id="M:W.PropertyChangedNotifier.GetValue">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyChangedNotifier_GetValue" />
    </api>
    <api id="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="propertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyChangedNotifier_OnPropertyChanged" />
    </api>
    <api id="E:W.PropertyChangedNotifier.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" ref="true" />
      </containers>
      <file name="E_W_PropertyChangedNotifier_PropertyChanged" />
    </api>
    <api id="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="RaiseOnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyChangedNotifier_RaiseOnPropertyChanged" />
    </api>
    <api id="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyChangedNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyChangedNotifier_SetValue" />
    </api>
    <api id="T:W.PropertyHost">
      <topicdata group="api" />
      <apidata name="PropertyHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
            <type api="T:W.Logging.Log" ref="true" />
          </type>
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHost.#ctor" />
        <element api="P:W.PropertyHost.IsDirty" />
        <element api="M:W.PropertyHost.MarkAsClean" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_PropertyHost" />
    </api>
    <api id="Methods.T:W.PropertyHost">
      <topicdata name="PropertyHost" group="list" subgroup="Methods" typeTopicId="T:W.PropertyHost" />
      <apidata name="PropertyHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHost.MarkAsClean" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHost" />
      </containers>
      <file name="Methods_T_W_PropertyHost" />
    </api>
    <api id="Properties.T:W.PropertyHost">
      <topicdata name="PropertyHost" group="list" subgroup="Properties" typeTopicId="T:W.PropertyHost" />
      <apidata name="PropertyHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.PropertyHost.IsDirty" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHost" />
      </containers>
      <file name="Properties_T_W_PropertyHost" />
    </api>
    <api id="M:W.PropertyHost.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHost" ref="true" />
      </containers>
      <file name="M_W_PropertyHost__ctor" />
    </api>
    <api id="P:W.PropertyHost.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHost" ref="true" />
      </containers>
      <file name="P_W_PropertyHost_IsDirty" />
    </api>
    <api id="M:W.PropertyHost.MarkAsClean">
      <topicdata group="api" />
      <apidata name="MarkAsClean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHost" ref="true" />
      </containers>
      <file name="M_W_PropertyHost_MarkAsClean" />
    </api>
    <api id="T:W.PropertyHostMethods">
      <topicdata group="api" />
      <apidata name="PropertyHostMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" />
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" />
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_PropertyHostMethods" />
    </api>
    <api id="Methods.T:W.PropertyHostMethods">
      <topicdata name="PropertyHostMethods" group="list" subgroup="Methods" typeTopicId="T:W.PropertyHostMethods" />
      <apidata name="PropertyHostMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" />
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" />
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostMethods" />
      </containers>
      <file name="Methods_T_W_PropertyHostMethods" />
    </api>
    <api id="M:W.PropertyHostMethods.InitializeProperties(System.Object)">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_PropertyHostMethods_InitializeProperties" />
    </api>
    <api id="M:W.PropertyHostMethods.IsDirty(System.Object)">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_PropertyHostMethods_IsDirty" />
    </api>
    <api id="M:W.PropertyHostMethods.MarkAsClean(System.Object)">
      <topicdata group="api" />
      <apidata name="MarkAsClean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_PropertyHostMethods_MarkAsClean" />
    </api>
    <api id="T:W.PropertyHostNotifier">
      <topicdata group="api" />
      <apidata name="PropertyHostNotifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.PropertyChangedNotifier" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:W.PropertyChangedNotifier.GetValue" />
        <element api="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)" />
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
        <element api="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostNotifier.#ctor" />
        <element api="P:W.PropertyHostNotifier.IsDirty" />
        <element api="M:W.PropertyHostNotifier.MarkAsClean" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_PropertyHostNotifier" />
    </api>
    <api id="Methods.T:W.PropertyHostNotifier">
      <topicdata name="PropertyHostNotifier" group="list" subgroup="Methods" typeTopicId="T:W.PropertyHostNotifier" />
      <apidata name="PropertyHostNotifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:W.PropertyChangedNotifier.GetValue" />
        <element api="M:W.PropertyChangedNotifier.OnPropertyChanged(System.String)" />
        <element api="M:W.PropertyChangedNotifier.RaiseOnPropertyChanged(System.Object,System.String)" />
        <element api="M:W.PropertyChangedNotifier.SetValue(System.Object,System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostNotifier.MarkAsClean" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostNotifier" />
      </containers>
      <file name="Methods_T_W_PropertyHostNotifier" />
    </api>
    <api id="Properties.T:W.PropertyHostNotifier">
      <topicdata name="PropertyHostNotifier" group="list" subgroup="Properties" typeTopicId="T:W.PropertyHostNotifier" />
      <apidata name="PropertyHostNotifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.PropertyHostNotifier.IsDirty" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostNotifier" />
      </containers>
      <file name="Properties_T_W_PropertyHostNotifier" />
    </api>
    <api id="Events.T:W.PropertyHostNotifier">
      <topicdata name="PropertyHostNotifier" group="list" subgroup="Events" typeTopicId="T:W.PropertyHostNotifier" />
      <apidata name="PropertyHostNotifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:W.PropertyChangedNotifier.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostNotifier" />
      </containers>
      <file name="Events_T_W_PropertyHostNotifier" />
    </api>
    <api id="M:W.PropertyHostNotifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyHostNotifier__ctor" />
    </api>
    <api id="P:W.PropertyHostNotifier.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostNotifier" ref="true" />
      </containers>
      <file name="P_W_PropertyHostNotifier_IsDirty" />
    </api>
    <api id="M:W.PropertyHostNotifier.MarkAsClean">
      <topicdata group="api" />
      <apidata name="MarkAsClean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.PropertyHostNotifier" ref="true" />
      </containers>
      <file name="M_W_PropertyHostNotifier_MarkAsClean" />
    </api>
    <api id="T:W.Singleton`1">
      <topicdata group="api" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TSingletonType">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Singleton`1.#ctor" />
        <element api="P:W.Singleton`1.Instance" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_Singleton_1" />
    </api>
    <api id="Methods.T:W.Singleton`1">
      <topicdata name="Singleton" group="list" subgroup="Methods" typeTopicId="T:W.Singleton`1" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TSingletonType">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Singleton`1" />
      </containers>
      <file name="Methods_T_W_Singleton_1" />
    </api>
    <api id="Properties.T:W.Singleton`1">
      <topicdata name="Singleton" group="list" subgroup="Properties" typeTopicId="T:W.Singleton`1" />
      <apidata name="Singleton" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TSingletonType">
          <constrained ref="true" ctor="true" />
        </template>
      </templates>
      <elements>
        <element api="P:W.Singleton`1.Instance" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Singleton`1" />
      </containers>
      <file name="Properties_T_W_Singleton_1" />
    </api>
    <api id="M:W.Singleton`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Singleton`1" ref="true" />
      </containers>
      <file name="M_W_Singleton_1__ctor" />
    </api>
    <api id="P:W.Singleton`1.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <template name="TSingletonType" index="0" api="T:W.Singleton`1" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.Singleton`1" ref="true" />
      </containers>
      <file name="P_W_Singleton_1_Instance" />
    </api>
    <api id="T:W.StringExtensions">
      <topicdata group="api" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:W.StringExtensions.IsValidBase64(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
      </containers>
      <file name="T_W_StringExtensions" />
    </api>
    <api id="Methods.T:W.StringExtensions">
      <topicdata name="StringExtensions" group="list" subgroup="Methods" typeTopicId="T:W.StringExtensions" />
      <apidata name="StringExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:W.StringExtensions.IsValidBase64(System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W" />
        <type api="T:W.StringExtensions" />
      </containers>
      <file name="Methods_T_W_StringExtensions" />
    </api>
    <api id="M:W.StringExtensions.IsValidBase64(System.String)">
      <topicdata group="api" />
      <apidata name="IsValidBase64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W" />
        <type api="T:W.StringExtensions" ref="true" />
      </containers>
      <file name="M_W_StringExtensions_IsValidBase64" />
    </api>
    <api id="N:W.Encryption">
      <topicdata group="api" />
      <apidata name="W.Encryption" group="namespace" />
      <elements>
        <element api="T:W.Encryption.MD5" />
        <element api="T:W.Encryption.PublicPrivateKeyPair" />
        <element api="T:W.Encryption.RSAMethods" />
      </elements>
      <file name="N_W_Encryption" />
    </api>
    <api id="T:W.Encryption.MD5">
      <topicdata group="api" />
      <apidata name="MD5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Encryption.MD5.#ctor" />
        <element api="Overload:W.Encryption.MD5.GetMd5Hash">
          <element api="M:W.Encryption.MD5.GetMd5Hash(System.String)" />
          <element api="M:W.Encryption.MD5.GetMd5Hash(System.String,System.Security.Cryptography.MD5)" />
        </element>
        <element api="M:W.Encryption.MD5.VerifyMd5Hash(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
      </containers>
      <file name="T_W_Encryption_MD5" />
    </api>
    <api id="Methods.T:W.Encryption.MD5">
      <topicdata name="MD5" group="list" subgroup="Methods" typeTopicId="T:W.Encryption.MD5" />
      <apidata name="MD5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Encryption.MD5.GetMd5Hash">
          <element api="M:W.Encryption.MD5.GetMd5Hash(System.String)" />
          <element api="M:W.Encryption.MD5.GetMd5Hash(System.String,System.Security.Cryptography.MD5)" />
        </element>
        <element api="M:W.Encryption.MD5.VerifyMd5Hash(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.MD5" />
      </containers>
      <file name="Methods_T_W_Encryption_MD5" />
    </api>
    <api id="Overload:W.Encryption.MD5.GetMd5Hash">
      <topicdata name="GetMd5Hash" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="GetMd5Hash" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Encryption.MD5.GetMd5Hash(System.String)" />
        <element api="M:W.Encryption.MD5.GetMd5Hash(System.String,System.Security.Cryptography.MD5)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.MD5" ref="true" />
      </containers>
      <file name="Overload_W_Encryption_MD5_GetMd5Hash" />
    </api>
    <api id="M:W.Encryption.MD5.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.MD5" ref="true" />
      </containers>
      <file name="M_W_Encryption_MD5__ctor" />
    </api>
    <api id="M:W.Encryption.MD5.GetMd5Hash(System.String)">
      <topicdata group="api" />
      <apidata name="GetMd5Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Encryption.MD5.GetMd5Hash" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.MD5" ref="true" />
      </containers>
      <file name="M_W_Encryption_MD5_GetMd5Hash" />
    </api>
    <api id="M:W.Encryption.MD5.GetMd5Hash(System.String,System.Security.Cryptography.MD5)">
      <topicdata group="api" />
      <apidata name="GetMd5Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Encryption.MD5.GetMd5Hash" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="md5">
          <type api="T:System.Security.Cryptography.MD5" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.MD5" ref="true" />
      </containers>
      <file name="M_W_Encryption_MD5_GetMd5Hash_1" />
    </api>
    <api id="M:W.Encryption.MD5.VerifyMd5Hash(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="VerifyMd5Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="hash">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.MD5" ref="true" />
      </containers>
      <file name="M_W_Encryption_MD5_VerifyMd5Hash" />
    </api>
    <api id="T:W.Encryption.PublicPrivateKeyPair">
      <topicdata group="api" />
      <apidata name="PublicPrivateKeyPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Encryption.PublicPrivateKeyPair.#ctor" />
        <element api="P:W.Encryption.PublicPrivateKeyPair.PrivateKey" />
        <element api="P:W.Encryption.PublicPrivateKeyPair.PublicKey" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
      </containers>
      <file name="T_W_Encryption_PublicPrivateKeyPair" />
    </api>
    <api id="Methods.T:W.Encryption.PublicPrivateKeyPair">
      <topicdata name="PublicPrivateKeyPair" group="list" subgroup="Methods" typeTopicId="T:W.Encryption.PublicPrivateKeyPair" />
      <apidata name="PublicPrivateKeyPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.PublicPrivateKeyPair" />
      </containers>
      <file name="Methods_T_W_Encryption_PublicPrivateKeyPair" />
    </api>
    <api id="Properties.T:W.Encryption.PublicPrivateKeyPair">
      <topicdata name="PublicPrivateKeyPair" group="list" subgroup="Properties" typeTopicId="T:W.Encryption.PublicPrivateKeyPair" />
      <apidata name="PublicPrivateKeyPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.Encryption.PublicPrivateKeyPair.PrivateKey" />
        <element api="P:W.Encryption.PublicPrivateKeyPair.PublicKey" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.PublicPrivateKeyPair" />
      </containers>
      <file name="Properties_T_W_Encryption_PublicPrivateKeyPair" />
    </api>
    <api id="M:W.Encryption.PublicPrivateKeyPair.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.PublicPrivateKeyPair" ref="true" />
      </containers>
      <file name="M_W_Encryption_PublicPrivateKeyPair__ctor" />
    </api>
    <api id="P:W.Encryption.PublicPrivateKeyPair.PrivateKey">
      <topicdata group="api" />
      <apidata name="PrivateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrivateKey" />
      <setter name="set_PrivateKey" />
      <returns>
        <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.PublicPrivateKeyPair" ref="true" />
      </containers>
      <file name="P_W_Encryption_PublicPrivateKeyPair_PrivateKey" />
    </api>
    <api id="P:W.Encryption.PublicPrivateKeyPair.PublicKey">
      <topicdata group="api" />
      <apidata name="PublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PublicKey" />
      <setter name="set_PublicKey" />
      <returns>
        <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.PublicPrivateKeyPair" ref="true" />
      </containers>
      <file name="P_W_Encryption_PublicPrivateKeyPair_PublicKey" />
    </api>
    <api id="T:W.Encryption.RSAMethods">
      <topicdata group="api" />
      <apidata name="RSAMethods" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Encryption.RSAMethods.#ctor" />
        <element api="M:W.Encryption.RSAMethods.CreateKeyPair(System.Int32)" />
        <element api="M:W.Encryption.RSAMethods.Decrypt(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.DecryptAsync(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.Encrypt(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.EncryptAsync(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.LegalKeySizes" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
      </containers>
      <file name="T_W_Encryption_RSAMethods" />
    </api>
    <api id="Methods.T:W.Encryption.RSAMethods">
      <topicdata name="RSAMethods" group="list" subgroup="Methods" typeTopicId="T:W.Encryption.RSAMethods" />
      <apidata name="RSAMethods" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Encryption.RSAMethods.CreateKeyPair(System.Int32)" />
        <element api="M:W.Encryption.RSAMethods.Decrypt(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.DecryptAsync(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.Encrypt(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.EncryptAsync(System.String,System.Security.Cryptography.RSAParameters)" />
        <element api="M:W.Encryption.RSAMethods.LegalKeySizes" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" />
      </containers>
      <file name="Methods_T_W_Encryption_RSAMethods" />
    </api>
    <api id="M:W.Encryption.RSAMethods.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods__ctor" />
    </api>
    <api id="M:W.Encryption.RSAMethods.CreateKeyPair(System.Int32)">
      <topicdata group="api" />
      <apidata name="CreateKeyPair" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Encryption.PublicPrivateKeyPair" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods_CreateKeyPair" />
    </api>
    <api id="M:W.Encryption.RSAMethods.Decrypt(System.String,System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cipher">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="privateKey">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods_Decrypt" />
    </api>
    <api id="M:W.Encryption.RSAMethods.DecryptAsync(System.String,System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="DecryptAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cipher">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="privateKey">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods_DecryptAsync" />
    </api>
    <api id="M:W.Encryption.RSAMethods.Encrypt(System.String,System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="publicKey">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods_Encrypt" />
    </api>
    <api id="M:W.Encryption.RSAMethods.EncryptAsync(System.String,System.Security.Cryptography.RSAParameters)">
      <topicdata group="api" />
      <apidata name="EncryptAsync" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="publicKey">
          <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods_EncryptAsync" />
    </api>
    <api id="M:W.Encryption.RSAMethods.LegalKeySizes">
      <topicdata group="api" />
      <apidata name="LegalKeySizes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Security.Cryptography.KeySizes" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Encryption" />
        <type api="T:W.Encryption.RSAMethods" ref="true" />
      </containers>
      <file name="M_W_Encryption_RSAMethods_LegalKeySizes" />
    </api>
    <api id="N:W.Logging">
      <topicdata group="api" />
      <apidata name="W.Logging" group="namespace" />
      <elements>
        <element api="T:W.Logging.CustomLogger" />
        <element api="T:W.Logging.Log" />
        <element api="T:W.Logging.Log.LogMessageCategory" />
        <element api="T:W.Logging.Log.LogMessageHistory" />
        <element api="T:W.Logging.Log.LogMessageHistory.LogMessage" />
      </elements>
      <file name="N_W_Logging" />
    </api>
    <api id="T:W.Logging.CustomLogger">
      <topicdata group="api" />
      <apidata name="CustomLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Logging.CustomLogger.#ctor(System.String,System.Boolean)" />
        <element api="P:W.Logging.CustomLogger.AddTimestamp" />
        <element api="M:W.Logging.CustomLogger.Dispose" />
        <element api="M:W.Logging.CustomLogger.FormatLogMessage(W.Logging.Log.LogMessageCategory,System.String)" />
        <element api="P:W.Logging.CustomLogger.IsDisposed" />
        <element api="M:W.Logging.CustomLogger.LogMessage(W.Logging.Log.LogMessageCategory,System.String)" />
        <element api="P:W.Logging.CustomLogger.Name" />
        <element api="M:W.Logging.CustomLogger.OnDispose" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
      </containers>
      <file name="T_W_Logging_CustomLogger" />
    </api>
    <api id="Methods.T:W.Logging.CustomLogger">
      <topicdata name="CustomLogger" group="list" subgroup="Methods" typeTopicId="T:W.Logging.CustomLogger" />
      <apidata name="CustomLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Logging.CustomLogger.Dispose" />
        <element api="M:W.Logging.CustomLogger.FormatLogMessage(W.Logging.Log.LogMessageCategory,System.String)" />
        <element api="M:W.Logging.CustomLogger.LogMessage(W.Logging.Log.LogMessageCategory,System.String)" />
        <element api="M:W.Logging.CustomLogger.OnDispose" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" />
      </containers>
      <file name="Methods_T_W_Logging_CustomLogger" />
    </api>
    <api id="Properties.T:W.Logging.CustomLogger">
      <topicdata name="CustomLogger" group="list" subgroup="Properties" typeTopicId="T:W.Logging.CustomLogger" />
      <apidata name="CustomLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.Logging.CustomLogger.AddTimestamp" />
        <element api="P:W.Logging.CustomLogger.IsDisposed" />
        <element api="P:W.Logging.CustomLogger.Name" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" />
      </containers>
      <file name="Properties_T_W_Logging_CustomLogger" />
    </api>
    <api id="M:W.Logging.CustomLogger.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="addTimestamp">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="M_W_Logging_CustomLogger__ctor" />
    </api>
    <api id="P:W.Logging.CustomLogger.AddTimestamp">
      <topicdata group="api" />
      <apidata name="AddTimestamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddTimestamp" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="P_W_Logging_CustomLogger_AddTimestamp" />
    </api>
    <api id="M:W.Logging.CustomLogger.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="M_W_Logging_CustomLogger_Dispose" />
    </api>
    <api id="M:W.Logging.CustomLogger.FormatLogMessage(W.Logging.Log.LogMessageCategory,System.String)">
      <topicdata group="api" />
      <apidata name="FormatLogMessage" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="category">
          <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
            <type api="T:W.Logging.Log" ref="true" />
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="M_W_Logging_CustomLogger_FormatLogMessage" />
    </api>
    <api id="P:W.Logging.CustomLogger.IsDisposed">
      <topicdata group="api" />
      <apidata name="IsDisposed" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDisposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="P_W_Logging_CustomLogger_IsDisposed" />
    </api>
    <api id="M:W.Logging.CustomLogger.LogMessage(W.Logging.Log.LogMessageCategory,System.String)">
      <topicdata group="api" />
      <apidata name="LogMessage" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="category">
          <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
            <type api="T:W.Logging.Log" ref="true" />
          </type>
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="M_W_Logging_CustomLogger_LogMessage" />
    </api>
    <api id="P:W.Logging.CustomLogger.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="P_W_Logging_CustomLogger_Name" />
    </api>
    <api id="M:W.Logging.CustomLogger.OnDispose">
      <topicdata group="api" />
      <apidata name="OnDispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.CustomLogger" ref="true" />
      </containers>
      <file name="M_W_Logging_CustomLogger_OnDispose" />
    </api>
    <api id="T:W.Logging.Log">
      <topicdata group="api" />
      <apidata name="Log" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:W.Logging.Log.e">
          <element api="M:W.Logging.Log.e(System.Exception)" />
          <element api="M:W.Logging.Log.e(System.String,System.Object[])" />
        </element>
        <element api="Overload:W.Logging.Log.i">
          <element api="M:W.Logging.Log.i(System.String,System.Object[])" />
          <element api="M:W.Logging.Log.i(System.String,System.String,System.Int32)" />
        </element>
        <element api="P:W.Logging.Log.LogTheMessage" />
        <element api="P:W.Logging.Log.MessageHistory" />
        <element api="Overload:W.Logging.Log.v">
          <element api="M:W.Logging.Log.v(System.String,System.Object[])" />
          <element api="M:W.Logging.Log.v(System.String,System.String,System.Int32)" />
        </element>
        <element api="Overload:W.Logging.Log.w">
          <element api="M:W.Logging.Log.w(System.String,System.Object[])" />
          <element api="M:W.Logging.Log.w(System.String,System.String,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
      </containers>
      <file name="T_W_Logging_Log" />
    </api>
    <api id="Methods.T:W.Logging.Log">
      <topicdata name="Log" group="list" subgroup="Methods" typeTopicId="T:W.Logging.Log" />
      <apidata name="Log" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:W.Logging.Log.e">
          <element api="M:W.Logging.Log.e(System.Exception)" />
          <element api="M:W.Logging.Log.e(System.String,System.Object[])" />
        </element>
        <element api="Overload:W.Logging.Log.i">
          <element api="M:W.Logging.Log.i(System.String,System.Object[])" />
          <element api="M:W.Logging.Log.i(System.String,System.String,System.Int32)" />
        </element>
        <element api="Overload:W.Logging.Log.v">
          <element api="M:W.Logging.Log.v(System.String,System.Object[])" />
          <element api="M:W.Logging.Log.v(System.String,System.String,System.Int32)" />
        </element>
        <element api="Overload:W.Logging.Log.w">
          <element api="M:W.Logging.Log.w(System.String,System.Object[])" />
          <element api="M:W.Logging.Log.w(System.String,System.String,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" />
      </containers>
      <file name="Methods_T_W_Logging_Log" />
    </api>
    <api id="Properties.T:W.Logging.Log">
      <topicdata name="Log" group="list" subgroup="Properties" typeTopicId="T:W.Logging.Log" />
      <apidata name="Log" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:W.Logging.Log.LogTheMessage" />
        <element api="P:W.Logging.Log.MessageHistory" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" />
      </containers>
      <file name="Properties_T_W_Logging_Log" />
    </api>
    <api id="Overload:W.Logging.Log.e">
      <topicdata name="e" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="e" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Logging.Log.e(System.Exception)" />
        <element api="M:W.Logging.Log.e(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="Overload_W_Logging_Log_e" />
    </api>
    <api id="Overload:W.Logging.Log.i">
      <topicdata name="i" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="i" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Logging.Log.i(System.String,System.Object[])" />
        <element api="M:W.Logging.Log.i(System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="Overload_W_Logging_Log_i" />
    </api>
    <api id="Overload:W.Logging.Log.v">
      <topicdata name="v" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="v" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Logging.Log.v(System.String,System.Object[])" />
        <element api="M:W.Logging.Log.v(System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="Overload_W_Logging_Log_v" />
    </api>
    <api id="Overload:W.Logging.Log.w">
      <topicdata name="w" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="w" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Logging.Log.w(System.String,System.Object[])" />
        <element api="M:W.Logging.Log.w(System.String,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="Overload_W_Logging_Log_w" />
    </api>
    <api id="M:W.Logging.Log.e(System.Exception)">
      <topicdata group="api" />
      <apidata name="e" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.e" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_e" />
    </api>
    <api id="M:W.Logging.Log.e(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="e" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.e" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_e_1" />
    </api>
    <api id="M:W.Logging.Log.i(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="i" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.i" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_i" />
    </api>
    <api id="M:W.Logging.Log.i(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="i" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.i" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callerName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerLineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_i_1" />
    </api>
    <api id="P:W.Logging.Log.LogTheMessage">
      <topicdata group="api" />
      <apidata name="LogTheMessage" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogTheMessage" />
      <setter name="set_LogTheMessage" />
      <returns>
        <type api="T:System.Action`2" ref="true">
          <specialization>
            <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
              <type api="T:W.Logging.Log" ref="true" />
            </type>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="P_W_Logging_Log_LogTheMessage" />
    </api>
    <api id="P:W.Logging.Log.MessageHistory">
      <topicdata group="api" />
      <apidata name="MessageHistory" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageHistory" />
      <returns>
        <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="P_W_Logging_Log_MessageHistory" />
    </api>
    <api id="M:W.Logging.Log.v(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="v" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.v" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_v" />
    </api>
    <api id="M:W.Logging.Log.v(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="v" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.v" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callerName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerLineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_v_1" />
    </api>
    <api id="M:W.Logging.Log.w(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="w" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.w" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_w" />
    </api>
    <api id="M:W.Logging.Log.w(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="w" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Logging.Log.w" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callerName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerLineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="M_W_Logging_Log_w_1" />
    </api>
    <api id="T:W.Logging.Log.LogMessageCategory">
      <topicdata group="api" />
      <apidata name="LogMessageCategory" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:W.Logging.Log.LogMessageCategory.Verbose" />
        <element api="F:W.Logging.Log.LogMessageCategory.Information" />
        <element api="F:W.Logging.Log.LogMessageCategory.Warning" />
        <element api="F:W.Logging.Log.LogMessageCategory.Error" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="T_W_Logging_Log_LogMessageCategory" />
    </api>
    <api id="F:W.Logging.Log.LogMessageCategory.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="F_W_Logging_Log_LogMessageCategory_Error" />
    </api>
    <api id="F:W.Logging.Log.LogMessageCategory.Information">
      <topicdata group="api" notopic="" />
      <apidata name="Information" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="F_W_Logging_Log_LogMessageCategory_Information" />
    </api>
    <api id="F:W.Logging.Log.LogMessageCategory.Verbose">
      <topicdata group="api" notopic="" />
      <apidata name="Verbose" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="F_W_Logging_Log_LogMessageCategory_Verbose" />
    </api>
    <api id="F:W.Logging.Log.LogMessageCategory.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="F_W_Logging_Log_LogMessageCategory_Warning" />
    </api>
    <api id="T:W.Logging.Log.LogMessageHistory">
      <topicdata group="api" />
      <apidata name="LogMessageHistory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.PropertyHost" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:W.PropertyHost.IsDirty" />
        <element api="M:W.PropertyHost.MarkAsClean" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Logging.Log.LogMessageHistory.#ctor(System.Boolean)" />
        <element api="P:W.Logging.Log.LogMessageHistory.Enabled" />
        <element api="P:W.Logging.Log.LogMessageHistory.MaximumNumberOfMessages" />
        <element api="P:W.Logging.Log.LogMessageHistory.Messages" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log" ref="true" />
      </containers>
      <file name="T_W_Logging_Log_LogMessageHistory" />
    </api>
    <api id="Methods.T:W.Logging.Log.LogMessageHistory">
      <topicdata name="LogMessageHistory" group="list" subgroup="Methods" typeTopicId="T:W.Logging.Log.LogMessageHistory" />
      <apidata name="LogMessageHistory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:W.PropertyHost.MarkAsClean" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" />
      </containers>
      <file name="Methods_T_W_Logging_Log_LogMessageHistory" />
    </api>
    <api id="Properties.T:W.Logging.Log.LogMessageHistory">
      <topicdata name="LogMessageHistory" group="list" subgroup="Properties" typeTopicId="T:W.Logging.Log.LogMessageHistory" />
      <apidata name="LogMessageHistory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.PropertyHost.IsDirty" />
        <element api="P:W.Logging.Log.LogMessageHistory.Enabled" />
        <element api="P:W.Logging.Log.LogMessageHistory.MaximumNumberOfMessages" />
        <element api="P:W.Logging.Log.LogMessageHistory.Messages" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" />
      </containers>
      <file name="Properties_T_W_Logging_Log_LogMessageHistory" />
    </api>
    <api id="M:W.Logging.Log.LogMessageHistory.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="newestFirst" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="M_W_Logging_Log_LogMessageHistory__ctor" />
    </api>
    <api id="P:W.Logging.Log.LogMessageHistory.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="P_W_Logging_Log_LogMessageHistory_Enabled" />
    </api>
    <api id="P:W.Logging.Log.LogMessageHistory.MaximumNumberOfMessages">
      <topicdata group="api" />
      <apidata name="MaximumNumberOfMessages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumNumberOfMessages" />
      <returns>
        <type api="T:W.Property`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="P_W_Logging_Log_LogMessageHistory_MaximumNumberOfMessages" />
    </api>
    <api id="P:W.Logging.Log.LogMessageHistory.Messages">
      <topicdata group="api" />
      <apidata name="Messages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Messages" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:W.Logging.Log.LogMessageHistory.LogMessage" ref="true">
              <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
                <type api="T:W.Logging.Log" ref="true" />
              </type>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="P_W_Logging_Log_LogMessageHistory_Messages" />
    </api>
    <api id="T:W.Logging.Log.LogMessageHistory.LogMessage">
      <topicdata group="api" />
      <apidata name="LogMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Logging.Log.LogMessageHistory.LogMessage.#ctor" />
        <element api="P:W.Logging.Log.LogMessageHistory.LogMessage.Category" />
        <element api="P:W.Logging.Log.LogMessageHistory.LogMessage.Message" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
          <type api="T:W.Logging.Log" ref="true" />
        </type>
      </containers>
      <file name="T_W_Logging_Log_LogMessageHistory_LogMessage" />
    </api>
    <api id="Methods.T:W.Logging.Log.LogMessageHistory.LogMessage">
      <topicdata name="LogMessage" group="list" subgroup="Methods" typeTopicId="T:W.Logging.Log.LogMessageHistory.LogMessage" />
      <apidata name="LogMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory.LogMessage" />
      </containers>
      <file name="Methods_T_W_Logging_Log_LogMessageHistory_LogMessage" />
    </api>
    <api id="Properties.T:W.Logging.Log.LogMessageHistory.LogMessage">
      <topicdata name="LogMessage" group="list" subgroup="Properties" typeTopicId="T:W.Logging.Log.LogMessageHistory.LogMessage" />
      <apidata name="LogMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.Logging.Log.LogMessageHistory.LogMessage.Category" />
        <element api="P:W.Logging.Log.LogMessageHistory.LogMessage.Message" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory.LogMessage" />
      </containers>
      <file name="Properties_T_W_Logging_Log_LogMessageHistory_LogMessage" />
    </api>
    <api id="M:W.Logging.Log.LogMessageHistory.LogMessage.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory.LogMessage" ref="true">
          <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
            <type api="T:W.Logging.Log" ref="true" />
          </type>
        </type>
      </containers>
      <file name="M_W_Logging_Log_LogMessageHistory_LogMessage__ctor" />
    </api>
    <api id="P:W.Logging.Log.LogMessageHistory.LogMessage.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:W.Property`1" ref="true">
          <specialization>
            <type api="T:W.Logging.Log.LogMessageCategory" ref="false">
              <type api="T:W.Logging.Log" ref="true" />
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory.LogMessage" ref="true">
          <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
            <type api="T:W.Logging.Log" ref="true" />
          </type>
        </type>
      </containers>
      <file name="P_W_Logging_Log_LogMessageHistory_LogMessage_Category" />
    </api>
    <api id="P:W.Logging.Log.LogMessageHistory.LogMessage.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:W.Property`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Logging" />
        <type api="T:W.Logging.Log.LogMessageHistory.LogMessage" ref="true">
          <type api="T:W.Logging.Log.LogMessageHistory" ref="true">
            <type api="T:W.Logging.Log" ref="true" />
          </type>
        </type>
      </containers>
      <file name="P_W_Logging_Log_LogMessageHistory_LogMessage_Message" />
    </api>
    <api id="N:W.Threading">
      <topicdata group="api" />
      <apidata name="W.Threading" group="namespace" />
      <elements>
        <element api="T:W.Threading.CPUProfileEnum" />
        <element api="T:W.Threading.Gate`1" />
        <element api="T:W.Threading.Gate" />
        <element api="T:W.Threading.GateMethods" />
        <element api="T:W.Threading.Thread`1" />
        <element api="T:W.Threading.Thread" />
        <element api="T:W.Threading.ThreadExtensions" />
      </elements>
      <file name="N_W_Threading" />
    </api>
    <api id="T:W.Threading.CPUProfileEnum">
      <topicdata group="api" />
      <apidata name="CPUProfileEnum" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:W.Threading.CPUProfileEnum.SpinWait0" />
        <element api="F:W.Threading.CPUProfileEnum.Sleep" />
        <element api="F:W.Threading.CPUProfileEnum.SpinWait1" />
        <element api="F:W.Threading.CPUProfileEnum.Yield" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <file name="T_W_Threading_CPUProfileEnum" />
    </api>
    <api id="F:W.Threading.CPUProfileEnum.Sleep">
      <topicdata group="api" notopic="" />
      <apidata name="Sleep" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </containers>
      <file name="F_W_Threading_CPUProfileEnum_Sleep" />
    </api>
    <api id="F:W.Threading.CPUProfileEnum.SpinWait0">
      <topicdata group="api" notopic="" />
      <apidata name="SpinWait0" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </containers>
      <file name="F_W_Threading_CPUProfileEnum_SpinWait0" />
    </api>
    <api id="F:W.Threading.CPUProfileEnum.SpinWait1">
      <topicdata group="api" notopic="" />
      <apidata name="SpinWait1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </containers>
      <file name="F_W_Threading_CPUProfileEnum_SpinWait1" />
    </api>
    <api id="F:W.Threading.CPUProfileEnum.Yield">
      <topicdata group="api" notopic="" />
      <apidata name="Yield" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.CPUProfileEnum" ref="false" />
      </containers>
      <file name="F_W_Threading_CPUProfileEnum_Yield" />
    </api>
    <api id="T:W.Threading.Gate">
      <topicdata group="api" />
      <apidata name="Gate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:W.Threading.Gate`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.Gate.#ctor(System.Action{System.Threading.CancellationToken})" />
        <element api="M:W.Threading.Gate.CallAction(System.Threading.CancellationToken)" />
        <element api="M:W.Threading.Gate.Cancel" />
        <element api="M:W.Threading.Gate.Dispose" />
        <element api="P:W.Threading.Gate.IsComplete" />
        <element api="P:W.Threading.Gate.IsRunning" />
        <element api="Overload:W.Threading.Gate.Join">
          <element api="M:W.Threading.Gate.Join" />
          <element api="M:W.Threading.Gate.Join(System.Int32)" />
        </element>
        <element api="M:W.Threading.Gate.Run" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <file name="T_W_Threading_Gate" />
    </api>
    <api id="Methods.T:W.Threading.Gate">
      <topicdata name="Gate" group="list" subgroup="Methods" typeTopicId="T:W.Threading.Gate" />
      <apidata name="Gate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.Gate.CallAction(System.Threading.CancellationToken)" />
        <element api="M:W.Threading.Gate.Cancel" />
        <element api="M:W.Threading.Gate.Dispose" />
        <element api="Overload:W.Threading.Gate.Join">
          <element api="M:W.Threading.Gate.Join" />
          <element api="M:W.Threading.Gate.Join(System.Int32)" />
        </element>
        <element api="M:W.Threading.Gate.Run" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" />
      </containers>
      <file name="Methods_T_W_Threading_Gate" />
    </api>
    <api id="Properties.T:W.Threading.Gate">
      <topicdata name="Gate" group="list" subgroup="Properties" typeTopicId="T:W.Threading.Gate" />
      <apidata name="Gate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.Threading.Gate.IsComplete" />
        <element api="P:W.Threading.Gate.IsRunning" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" />
      </containers>
      <file name="Properties_T_W_Threading_Gate" />
    </api>
    <api id="Overload:W.Threading.Gate.Join">
      <topicdata name="Join" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Join" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Gate.Join" />
        <element api="M:W.Threading.Gate.Join(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Gate_Join" />
    </api>
    <api id="M:W.Threading.Gate.#ctor(System.Action{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate__ctor" />
    </api>
    <api id="M:W.Threading.Gate.CallAction(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="CallAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_CallAction" />
    </api>
    <api id="M:W.Threading.Gate.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_Cancel" />
    </api>
    <api id="M:W.Threading.Gate.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_Dispose" />
    </api>
    <api id="P:W.Threading.Gate.IsComplete">
      <topicdata group="api" />
      <apidata name="IsComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="P_W_Threading_Gate_IsComplete" />
    </api>
    <api id="P:W.Threading.Gate.IsRunning">
      <topicdata group="api" />
      <apidata name="IsRunning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRunning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="P_W_Threading_Gate_IsRunning" />
    </api>
    <api id="M:W.Threading.Gate.Join">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Gate.Join" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_Join" />
    </api>
    <api id="M:W.Threading.Gate.Join(System.Int32)">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Gate.Join" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_Join_1" />
    </api>
    <api id="M:W.Threading.Gate.Run">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_Run" />
    </api>
    <api id="T:W.Threading.Gate`1">
      <topicdata group="api" />
      <apidata name="Gate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.Threading.Gate" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TParameterType" />
      </templates>
      <elements>
        <element api="M:W.Threading.Gate.Cancel" />
        <element api="M:W.Threading.Gate.Dispose" />
        <element api="P:W.Threading.Gate.IsComplete" />
        <element api="P:W.Threading.Gate.IsRunning" />
        <element api="Overload:W.Threading.Gate`1.Join">
          <element api="M:W.Threading.Gate.Join" />
          <element api="M:W.Threading.Gate.Join(System.Int32)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Threading.Gate`1.#ctor">
          <element api="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0)" />
        </element>
        <element api="M:W.Threading.Gate`1.CallAction(System.Threading.CancellationToken)" />
        <element api="Overload:W.Threading.Gate`1.Run">
          <element api="M:W.Threading.Gate`1.Run" />
          <element api="M:W.Threading.Gate`1.Run(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <file name="T_W_Threading_Gate_1" />
    </api>
    <api id="Methods.T:W.Threading.Gate`1">
      <topicdata name="Gate" group="list" subgroup="Methods" typeTopicId="T:W.Threading.Gate`1" />
      <apidata name="Gate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <elements>
        <element api="M:W.Threading.Gate.Cancel" />
        <element api="M:W.Threading.Gate.Dispose" />
        <element api="Overload:W.Threading.Gate`1.Join">
          <element api="M:W.Threading.Gate.Join" />
          <element api="M:W.Threading.Gate.Join(System.Int32)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.Gate`1.CallAction(System.Threading.CancellationToken)" />
        <element api="Overload:W.Threading.Gate`1.Run">
          <element api="M:W.Threading.Gate`1.Run" />
          <element api="M:W.Threading.Gate`1.Run(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" />
      </containers>
      <file name="Methods_T_W_Threading_Gate_1" />
    </api>
    <api id="Properties.T:W.Threading.Gate`1">
      <topicdata name="Gate" group="list" subgroup="Properties" typeTopicId="T:W.Threading.Gate`1" />
      <apidata name="Gate" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <elements>
        <element api="P:W.Threading.Gate.IsComplete" />
        <element api="P:W.Threading.Gate.IsRunning" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" />
      </containers>
      <file name="Properties_T_W_Threading_Gate_1" />
    </api>
    <api id="Overload:W.Threading.Gate`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationToken})" />
        <element api="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Gate_1__ctor" />
    </api>
    <api id="Overload:W.Threading.Gate`1.Run">
      <topicdata name="Run" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Run" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Gate`1.Run" />
        <element api="M:W.Threading.Gate`1.Run(`0)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Gate_1_Run" />
    </api>
    <api id="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Gate`1.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="T:W.Threading.Gate`1" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_1__ctor" />
    </api>
    <api id="M:W.Threading.Gate`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Gate`1.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="T:W.Threading.Gate`1" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultArg">
          <template name="TParameterType" index="0" api="T:W.Threading.Gate`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_1__ctor_1" />
    </api>
    <api id="M:W.Threading.Gate`1.CallAction(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="CallAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.Threading.Gate.CallAction(System.Threading.CancellationToken)">
          <type api="T:W.Threading.Gate" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_1_CallAction" />
    </api>
    <api id="M:W.Threading.Gate`1.Run">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Gate`1.Run" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.Threading.Gate.Run">
          <type api="T:W.Threading.Gate" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_1_Run" />
    </api>
    <api id="M:W.Threading.Gate`1.Run(`0)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Gate`1.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <template name="TParameterType" index="0" api="T:W.Threading.Gate`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Gate`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Gate_1_Run_1" />
    </api>
    <api id="T:W.Threading.GateMethods">
      <topicdata group="api" />
      <apidata name="GateMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:W.Threading.GateMethods.AsGate">
          <element api="M:W.Threading.GateMethods.AsGate(System.Action{System.Threading.CancellationToken})" />
          <element api="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationToken})" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_Threading_GateMethods" />
    </api>
    <api id="Methods.T:W.Threading.GateMethods">
      <topicdata name="GateMethods" group="list" subgroup="Methods" typeTopicId="T:W.Threading.GateMethods" />
      <apidata name="GateMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:W.Threading.GateMethods.AsGate">
          <element api="M:W.Threading.GateMethods.AsGate(System.Action{System.Threading.CancellationToken})" />
          <element api="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationToken})" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.GateMethods" />
      </containers>
      <file name="Methods_T_W_Threading_GateMethods" />
    </api>
    <api id="Overload:W.Threading.GateMethods.AsGate">
      <topicdata name="AsGate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AsGate" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.GateMethods.AsGate(System.Action{System.Threading.CancellationToken})" />
        <element api="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationToken})" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.GateMethods" ref="true" />
      </containers>
      <file name="Overload_W_Threading_GateMethods_AsGate" />
    </api>
    <api id="M:W.Threading.GateMethods.AsGate(System.Action{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="AsGate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.GateMethods.AsGate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Gate" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.GateMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_Threading_GateMethods_AsGate" />
    </api>
    <api id="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="AsGate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.GateMethods.AsGate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationToken})" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Gate`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.GateMethods.AsGate``1(System.Action{``0,System.Threading.CancellationToken})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.GateMethods" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_Threading_GateMethods_AsGate__1" />
    </api>
    <api id="T:W.Threading.Thread">
      <topicdata group="api" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:W.Threading.Thread`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Threading.Thread.#ctor">
          <element api="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationToken},System.Boolean)" />
        </element>
        <element api="M:W.Threading.Thread.CallAction(System.Threading.CancellationToken)" />
        <element api="M:W.Threading.Thread.Cancel" />
        <element api="Overload:W.Threading.Thread.Create">
          <element api="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken},System.Boolean)" />
          <element api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
        </element>
        <element api="M:W.Threading.Thread.Dispose" />
        <element api="P:W.Threading.Thread.Exception" />
        <element api="P:W.Threading.Thread.IsComplete" />
        <element api="P:W.Threading.Thread.IsFaulted" />
        <element api="P:W.Threading.Thread.IsRunning" />
        <element api="P:W.Threading.Thread.IsStarted" />
        <element api="Overload:W.Threading.Thread.Join">
          <element api="M:W.Threading.Thread.Join" />
          <element api="M:W.Threading.Thread.Join(System.Int32)" />
        </element>
        <element api="Overload:W.Threading.Thread.Sleep">
          <element api="M:W.Threading.Thread.Sleep(System.Int32)" />
          <element api="M:W.Threading.Thread.Sleep(W.Threading.CPUProfileEnum)" />
          <element api="M:W.Threading.Thread.Sleep(System.Int32,System.Boolean)" />
        </element>
        <element api="Overload:W.Threading.Thread.Start">
          <element api="M:W.Threading.Thread.Start" />
          <element api="M:W.Threading.Thread.Start(System.Int32)" />
        </element>
        <element api="M:W.Threading.Thread.Stop" />
        <element api="P:W.Threading.Thread.Token" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <file name="T_W_Threading_Thread" />
    </api>
    <api id="Methods.T:W.Threading.Thread">
      <topicdata name="Thread" group="list" subgroup="Methods" typeTopicId="T:W.Threading.Thread" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.Thread.CallAction(System.Threading.CancellationToken)" />
        <element api="M:W.Threading.Thread.Cancel" />
        <element api="Overload:W.Threading.Thread.Create">
          <element api="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken},System.Boolean)" />
          <element api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
        </element>
        <element api="M:W.Threading.Thread.Dispose" />
        <element api="Overload:W.Threading.Thread.Join">
          <element api="M:W.Threading.Thread.Join" />
          <element api="M:W.Threading.Thread.Join(System.Int32)" />
        </element>
        <element api="Overload:W.Threading.Thread.Sleep">
          <element api="M:W.Threading.Thread.Sleep(System.Int32)" />
          <element api="M:W.Threading.Thread.Sleep(W.Threading.CPUProfileEnum)" />
          <element api="M:W.Threading.Thread.Sleep(System.Int32,System.Boolean)" />
        </element>
        <element api="Overload:W.Threading.Thread.Start">
          <element api="M:W.Threading.Thread.Start" />
          <element api="M:W.Threading.Thread.Start(System.Int32)" />
        </element>
        <element api="M:W.Threading.Thread.Stop" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" />
      </containers>
      <file name="Methods_T_W_Threading_Thread" />
    </api>
    <api id="Properties.T:W.Threading.Thread">
      <topicdata name="Thread" group="list" subgroup="Properties" typeTopicId="T:W.Threading.Thread" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:W.Threading.Thread.Exception" />
        <element api="P:W.Threading.Thread.IsComplete" />
        <element api="P:W.Threading.Thread.IsFaulted" />
        <element api="P:W.Threading.Thread.IsRunning" />
        <element api="P:W.Threading.Thread.IsStarted" />
        <element api="P:W.Threading.Thread.Token" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" />
      </containers>
      <file name="Properties_T_W_Threading_Thread" />
    </api>
    <api id="Overload:W.Threading.Thread.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationToken})" />
        <element api="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationToken},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread__ctor" />
    </api>
    <api id="Overload:W.Threading.Thread.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken})" />
        <element api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken})" />
        <element api="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken},System.Boolean)" />
        <element api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread_Create" />
    </api>
    <api id="Overload:W.Threading.Thread.Join">
      <topicdata name="Join" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Join" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Thread.Join" />
        <element api="M:W.Threading.Thread.Join(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread_Join" />
    </api>
    <api id="Overload:W.Threading.Thread.Sleep">
      <topicdata name="Sleep" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Thread.Sleep(System.Int32)" />
        <element api="M:W.Threading.Thread.Sleep(W.Threading.CPUProfileEnum)" />
        <element api="M:W.Threading.Thread.Sleep(System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread_Sleep" />
    </api>
    <api id="Overload:W.Threading.Thread.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Thread.Start" />
        <element api="M:W.Threading.Thread.Start(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread_Start" />
    </api>
    <api id="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Thread.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread__ctor" />
    </api>
    <api id="M:W.Threading.Thread.#ctor(System.Action{System.Threading.CancellationToken},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Thread.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread__ctor_1" />
    </api>
    <api id="M:W.Threading.Thread.CallAction(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="CallAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_CallAction" />
    </api>
    <api id="M:W.Threading.Thread.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Call Stop or Dispose instead.</value>
          </argument>
        </attribute>
      </attributes>
      <file name="M_W_Threading_Thread_Cancel" />
    </api>
    <api id="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Create" />
    </api>
    <api id="M:W.Threading.Thread.Create(System.Action{System.Threading.CancellationToken},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Create_1" />
    </api>
    <api id="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Create" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken})" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Create__1" />
    </api>
    <api id="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Create" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.Thread.Create``1(System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Create__1_1" />
    </api>
    <api id="M:W.Threading.Thread.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Dispose" />
    </api>
    <api id="P:W.Threading.Thread.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="P_W_Threading_Thread_Exception" />
    </api>
    <api id="P:W.Threading.Thread.IsComplete">
      <topicdata group="api" />
      <apidata name="IsComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="P_W_Threading_Thread_IsComplete" />
    </api>
    <api id="P:W.Threading.Thread.IsFaulted">
      <topicdata group="api" />
      <apidata name="IsFaulted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsFaulted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="P_W_Threading_Thread_IsFaulted" />
    </api>
    <api id="P:W.Threading.Thread.IsRunning">
      <topicdata group="api" />
      <apidata name="IsRunning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRunning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use IsStarted instead</value>
          </argument>
        </attribute>
      </attributes>
      <file name="P_W_Threading_Thread_IsRunning" />
    </api>
    <api id="P:W.Threading.Thread.IsStarted">
      <topicdata group="api" />
      <apidata name="IsStarted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsStarted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="P_W_Threading_Thread_IsStarted" />
    </api>
    <api id="M:W.Threading.Thread.Join">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread.Join" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Join" />
    </api>
    <api id="M:W.Threading.Thread.Join(System.Int32)">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread.Join" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Join_1" />
    </api>
    <api id="M:W.Threading.Thread.Sleep(System.Int32)">
      <topicdata group="api" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Sleep" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msDelay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Sleep" />
    </api>
    <api id="M:W.Threading.Thread.Sleep(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Sleep" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="msDelay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="useSpinWait">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Sleep_1" />
    </api>
    <api id="M:W.Threading.Thread.Sleep(W.Threading.CPUProfileEnum)">
      <topicdata group="api" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.Thread.Sleep" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:W.Threading.CPUProfileEnum" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Sleep_2" />
    </api>
    <api id="M:W.Threading.Thread.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread.Start" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Start" />
    </api>
    <api id="M:W.Threading.Thread.Start(System.Int32)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread.Start" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="msLifetime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Start_1" />
    </api>
    <api id="M:W.Threading.Thread.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_Stop" />
    </api>
    <api id="P:W.Threading.Thread.Token">
      <topicdata group="api" />
      <apidata name="Token" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Token" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread" ref="true" />
      </containers>
      <file name="P_W_Threading_Thread_Token" />
    </api>
    <api id="T:W.Threading.Thread`1">
      <topicdata group="api" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:W.Threading.Thread" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TParameterType" />
      </templates>
      <elements>
        <element api="M:W.Threading.Thread.Cancel" />
        <element api="M:W.Threading.Thread.Dispose" />
        <element api="P:W.Threading.Thread.Exception" />
        <element api="P:W.Threading.Thread.IsComplete" />
        <element api="P:W.Threading.Thread.IsFaulted" />
        <element api="P:W.Threading.Thread.IsRunning" />
        <element api="P:W.Threading.Thread.IsStarted" />
        <element api="Overload:W.Threading.Thread`1.Join">
          <element api="M:W.Threading.Thread.Join" />
          <element api="M:W.Threading.Thread.Join(System.Int32)" />
        </element>
        <element api="M:W.Threading.Thread.Stop" />
        <element api="P:W.Threading.Thread.Token" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:W.Threading.Thread`1.#ctor">
          <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},System.Boolean)" />
          <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0)" />
          <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0,System.Boolean)" />
        </element>
        <element api="M:W.Threading.Thread`1.CallAction(System.Threading.CancellationToken)" />
        <element api="Overload:W.Threading.Thread`1.Start">
          <element api="M:W.Threading.Thread`1.Start" />
          <element api="M:W.Threading.Thread`1.Start(System.Int32)" />
          <element api="M:W.Threading.Thread`1.Start(`0)" />
          <element api="M:W.Threading.Thread`1.Start(`0,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <file name="T_W_Threading_Thread_1" />
    </api>
    <api id="Methods.T:W.Threading.Thread`1">
      <topicdata name="Thread" group="list" subgroup="Methods" typeTopicId="T:W.Threading.Thread`1" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <elements>
        <element api="M:W.Threading.Thread.Cancel" />
        <element api="M:W.Threading.Thread.Dispose" />
        <element api="Overload:W.Threading.Thread`1.Join">
          <element api="M:W.Threading.Thread.Join" />
          <element api="M:W.Threading.Thread.Join(System.Int32)" />
        </element>
        <element api="M:W.Threading.Thread.Stop" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.As``1(System.Object)" source="extension">
          <apidata name="As" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType">
              <constrained ref="true" />
            </template>
          </templates>
          <returns>
            <template name="TType" index="0" api="M:W.AsExtensions.As``1(System.Object)" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsJson``1(System.Object)" source="extension">
          <apidata name="AsJson" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.AsExtensions.AsXml``1(System.Object)" source="extension">
          <apidata name="AsXml" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TType" />
          </templates>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.AsExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.InitializeProperties(System.Object)" source="extension">
          <apidata name="InitializeProperties" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.IsDirty(System.Object)" source="extension">
          <apidata name="IsDirty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.PropertyHostMethods.MarkAsClean(System.Object)" source="extension">
          <apidata name="MarkAsClean" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.PropertyHostMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.ExtensionMethods.WaitForValueAsync(System.Object,System.Object,System.Int32)" source="extension">
          <apidata name="WaitForValueAsync" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="desiredValue">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="msTimeout" optional="true">
              <type api="T:System.Int32" ref="false" />
              <argument>
                <type api="T:System.Int32" ref="false" />
                <value>-1</value>
              </argument>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W" />
            <type api="T:W.ExtensionMethods" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" source="extension" overload="true">
          <apidata name="CreateThread" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TParameterType" />
          </templates>
          <parameters>
            <parameter name="action">
              <type api="T:System.Action`2" ref="true">
                <specialization>
                  <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
                  <type api="T:System.Threading.CancellationToken" ref="false" />
                </specialization>
              </type>
            </parameter>
            <parameter name="autoStart">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:W.Threading.Thread`1" ref="true">
              <specialization>
                <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:W.Threading" />
            <type api="T:W.Threading.ThreadExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:W.Threading.Thread`1.CallAction(System.Threading.CancellationToken)" />
        <element api="Overload:W.Threading.Thread`1.Start">
          <element api="M:W.Threading.Thread`1.Start" />
          <element api="M:W.Threading.Thread`1.Start(System.Int32)" />
          <element api="M:W.Threading.Thread`1.Start(`0)" />
          <element api="M:W.Threading.Thread`1.Start(`0,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" />
      </containers>
      <file name="Methods_T_W_Threading_Thread_1" />
    </api>
    <api id="Properties.T:W.Threading.Thread`1">
      <topicdata name="Thread" group="list" subgroup="Properties" typeTopicId="T:W.Threading.Thread`1" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <elements>
        <element api="P:W.Threading.Thread.Exception" />
        <element api="P:W.Threading.Thread.IsComplete" />
        <element api="P:W.Threading.Thread.IsFaulted" />
        <element api="P:W.Threading.Thread.IsRunning" />
        <element api="P:W.Threading.Thread.IsStarted" />
        <element api="P:W.Threading.Thread.Token" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" />
      </containers>
      <file name="Properties_T_W_Threading_Thread_1" />
    </api>
    <api id="Overload:W.Threading.Thread`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken})" />
        <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},System.Boolean)" />
        <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0)" />
        <element api="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread_1__ctor" />
    </api>
    <api id="Overload:W.Threading.Thread`1.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.Thread`1.Start" />
        <element api="M:W.Threading.Thread`1.Start(System.Int32)" />
        <element api="M:W.Threading.Thread`1.Start(`0)" />
        <element api="M:W.Threading.Thread`1.Start(`0,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="Overload_W_Threading_Thread_1_Start" />
    </api>
    <api id="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Thread`1.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1__ctor" />
    </api>
    <api id="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Thread`1.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1__ctor_1" />
    </api>
    <api id="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Thread`1.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultArg">
          <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1__ctor_2" />
    </api>
    <api id="M:W.Threading.Thread`1.#ctor(System.Action{`0,System.Threading.CancellationToken},`0,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:W.Threading.Thread`1.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultArg">
          <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1__ctor_3" />
    </api>
    <api id="M:W.Threading.Thread`1.CallAction(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="CallAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.Threading.Thread.CallAction(System.Threading.CancellationToken)">
          <type api="T:W.Threading.Thread" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1_CallAction" />
    </api>
    <api id="M:W.Threading.Thread`1.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread`1.Start" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.Threading.Thread.Start">
          <type api="T:W.Threading.Thread" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1_Start" />
    </api>
    <api id="M:W.Threading.Thread`1.Start(System.Int32)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread`1.Start" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:W.Threading.Thread.Start(System.Int32)">
          <type api="T:W.Threading.Thread" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="msLifetime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1_Start_1" />
    </api>
    <api id="M:W.Threading.Thread`1.Start(`0)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread`1.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1_Start_2" />
    </api>
    <api id="M:W.Threading.Thread`1.Start(`0,System.Int32)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:W.Threading.Thread`1.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <template name="TParameterType" index="0" api="T:W.Threading.Thread`1" />
        </parameter>
        <parameter name="msLifetime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.Thread`1" ref="true" />
      </containers>
      <file name="M_W_Threading_Thread_1_Start_3" />
    </api>
    <api id="T:W.Threading.ThreadExtensions">
      <topicdata group="api" />
      <apidata name="ThreadExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:W.Threading.ThreadExtensions.CreateThread">
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="T_W_Threading_ThreadExtensions" />
    </api>
    <api id="Methods.T:W.Threading.ThreadExtensions">
      <topicdata name="ThreadExtensions" group="list" subgroup="Methods" typeTopicId="T:W.Threading.ThreadExtensions" />
      <apidata name="ThreadExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:W.Threading.ThreadExtensions.CreateThread">
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})" />
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
          <element api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.ThreadExtensions" />
      </containers>
      <file name="Methods_T_W_Threading_ThreadExtensions" />
    </api>
    <api id="Overload:W.Threading.ThreadExtensions.CreateThread">
      <topicdata name="CreateThread" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CreateThread" group="member" subgroup="method" />
      <elements>
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})" />
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
        <element api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.ThreadExtensions" ref="true" />
      </containers>
      <file name="Overload_W_Threading_ThreadExtensions_CreateThread" />
    </api>
    <api id="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="CreateThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.ThreadExtensions.CreateThread" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.ThreadExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_Threading_ThreadExtensions_CreateThread__1" />
    </api>
    <api id="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.ThreadExtensions.CreateThread" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="this">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(System.Object,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.ThreadExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_Threading_ThreadExtensions_CreateThread__1_1" />
    </api>
    <api id="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})">
      <topicdata group="api" />
      <apidata name="CreateThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.ThreadExtensions.CreateThread" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="this">
          <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.ThreadExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_Threading_ThreadExtensions_CreateThread__1_2" />
    </api>
    <api id="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateThread" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:W.Threading.ThreadExtensions.CreateThread" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TParameterType" />
      </templates>
      <parameters>
        <parameter name="this">
          <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="autoStart">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:W.Threading.Thread`1" ref="true">
          <specialization>
            <template name="TParameterType" index="0" api="M:W.Threading.ThreadExtensions.CreateThread``1(``0,System.Action{``0,System.Threading.CancellationToken},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Tungsten" module="Tungsten" kind="DynamicallyLinkedLibrary">
          <assemblydata version="1.3.0.0 (1.3.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:W.Threading" />
        <type api="T:W.Threading.ThreadExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="M_W_Threading_ThreadExtensions_CreateThread__1_3" />
    </api>
    <api id="R:Project_Tungsten">
      <topicdata group="root" />
      <elements>
        <element api="N:W" />
        <element api="N:W.Encryption" />
        <element api="N:W.Logging" />
        <element api="N:W.Threading" />
      </elements>
      <file name="R_Project_Tungsten" />
    </api>
  </apis>
</reflection>